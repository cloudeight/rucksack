@charset 'utf-8';

/*  ========================================================================
    JUICE -> FRAMEWORK -> FOUNDATION -> HELPERS
    ========================================================================  */

// Clearfix
.clearfix {
    // Pseudo elements
    &::after {
        @include clearfix();
    }
}

// Display
.show {
    display: block !important;
}

.show-inline {
    display: inline-block !important;
}

.show-flex {
    display: flex !important;
}

.show-inline-flex {
    display: inline-flex !important;
}

.hide {
    display: none !important;
}

// Visibility
.is-visible {
    visibility: visible !important;
}

.is-hidden {
    visibility: hidden !important;
}

// Content spacing
.has-no-content-spacing {
    padding: 0 !important;
}

.has-default-content-spacing {
    padding: var(--default-content-spacing) !important;
}

@each $size in $sizes {
    .has-#{$size}-content-spacing {
        padding: var(--default-content-spacing-#{$size}) !important;
    }
}

// Element spacing
.has-no-element-spacing {
    margin-bottom: 0 !important;
}

.has-default-element-spacing {
    margin-bottom: var(--default-element-spacing) !important;
}

@each $size in $sizes {
    .has-#{$size}-element-spacing {
        margin-bottom: var(--default-element-spacing-#{$size}) !important;
    }
}

.has-no-top-element-spacing {
    margin-bottom: 0 !important;
}

.has-top-element-spacing {
    margin-bottom: var(--default-element-spacing) !important;
}

@each $size in $sizes {
    .has-#{$size}-top-element-spacing {
        margin-top: var(--default-element-spacing-#{$size}) !important;
    }
}

.has-no-last-child-element-spacing {
    &>*:last-child {
        margin-bottom: 0 !important;
    }
}

// Typography
.has-default-font-size {
    font-size: var(--default-font-size) !important;
}

@each $size in $sizes {
    .has-#{$size}-font-size {
        font-size: var(--default-font-size-#{$size}) !important;
    }
}

.is-left-aligned {
    text-align: left !important;
}

.is-center-aligned {
    text-align: center !important;
}

.is-right-aligned {
    text-align: right !important;
}

// Floats
.is-pulled-left  {
    float: left !important;
}

.is-pulled-right {
    float: right !important;
}

// Modifiers: Colors
@each $color-name, $color in $colors {
    p {
        &.is-#{$color-name} {
            // Variables
            --color: var(--color-#{$color-name});

            // Styles
            color: var(--color) !important;
        }
    }

    a {
        &.is-#{$color-name}:not(.button) {
            // Variables
            --color: var(--color-#{$color-name});

            // Styles
            color: var(--color) !important;

            // Pseudo classes
            &:hover {
                --color: var(--color-#{$color-name}-darken-2);
            }

            &:hover {
                --color: var(--color-#{$color-name}-darken-4);
            }

            &:active {
                --color: var(--color-#{$color-name}-darken-6);
            }
        }
    }

    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
        &.is-#{$color-name} {
            // Variables
            --color: var(--color-#{$color-name});

            // Styles
            color: var(--color) !important;
        }
    }
}

// Modifiers: Feedback colors
@each $feedback-name, $color in $feedback-colors {
    p {
        &.has-#{$feedback-name} {
            // Variables
            --color: var(--feedback-color-#{$feedback-name});

            // Styles
            color: var(--color) !important;
        }
    }

    a {
        &.has-#{$feedback-name}:not(.button) {
            // Variables
            --color: var(--feedback-color-#{$feedback-name});

            // Styles
            color: var(--color) !important;

            // Pseudo classes
            &:hover {
                --color: var(--feedback-color-#{$feedback-name}-darken-2);
            }

            &:active {
                --color: var(--feedback-color-#{$feedback-name}-lighten-4);
            }
        }
    }

    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
        &.has-#{$feedback-name} {
            // Variables
            --color: var(--feedback-color-#{$feedback-name});

            // Styles
            color: var(--color) !important;
        }
    }
}

// Breakpoints
@each $breakpoint-name, $breakpoint in $breakpoints {
    @include breakpoint($breakpoint-name) {
        // Clearfix
        .clearfix\@#{$breakpoint-name} {
            // Pseudo elements
            &::after {
                @include clearfix();
            }
        }

        // Display
        .show\@#{$breakpoint-name} {
            display: block !important;
        }

        .show-inline\@#{$breakpoint-name} {
            display: inline-block !important;
        }

        .show-flex\@#{$breakpoint-name} {
            display: flex !important;
        }

        .show-inline-flex\@#{$breakpoint-name} {
            display: inline-flex !important;
        }

        .hide\@#{$breakpoint-name} {
            display: none !important;
        }

        // Visibility
        .is-visible\@#{$breakpoint-name} {
            visibility: visible !important;
        }

        .is-hidden\@#{$breakpoint-name} {
            visibility: hidden !important;
        }

        // Content spacing
        .has-no-content-spacing\@#{$breakpoint-name} {
            padding: 0 !important;
        }

        .has-default-content-spacing\@#{$breakpoint-name} {
            padding: var(--default-content-spacing) !important;
        }

        @each $size in $sizes {
            .has-#{$size}-content-spacing\@#{$breakpoint-name} {
                padding: var(--default-content-spacing-#{$size}) !important;
            }
        }

        // Element spacing
        .has-no-element-spacing\@#{$breakpoint-name} {
            margin-bottom: 0 !important;
        }

        .has-default-element-spacing\@#{$breakpoint-name} {
            margin-bottom: var(--default-element-spacing) !important;
        }

        @each $size in $sizes {
            .has-#{$size}-element-spacing\@#{$breakpoint-name} {
                margin-bottom: var(--default-element-spacing-#{$size}) !important;
            }
        }

        .has-no-top-element-spacing\@#{$breakpoint-name} {
            margin-bottom: 0 !important;
        }

        .has-top-element-spacing\@#{$breakpoint-name} {
            margin-bottom: var(--default-element-spacing) !important;
        }

        @each $size in $sizes {
            .has-#{$size}-top-element-spacing\@#{$breakpoint-name} {
                margin-top: var(--default-element-spacing-#{$size}) !important;
            }
        }

        .has-no-last-child-element-spacing\@#{$breakpoint-name} {
            &>*:last-child {
                margin-bottom: 0 !important;
            }
        }

        // Typography
        .has-default-font-size\@#{$breakpoint-name} {
            font-size: var(--default-font-size) !important;
        }

        @each $size in $sizes {
            .has-#{$size}-font-size\@#{$breakpoint-name} {
                font-size: var(--default-font-size-#{$size}) !important;
            }
        }

        .is-left-aligned\@#{$breakpoint-name} {
            text-align: left !important;
        }

        .is-center-aligned\@#{$breakpoint-name} {
            text-align: center !important;
        }

        .is-right-aligned\@#{$breakpoint-name} {
            text-align: right !important;
        }

        // Floats
        .is-pulled-left\@#{$breakpoint-name}  {
            float: left !important;
        }

        .is-pulled-right\@#{$breakpoint-name} {
            float: right !important;
        }

        // Modifiers: Colors
        @each $color-name, $color in $colors {
            p {
                &.is-#{$color-name}\@#{$breakpoint-name} {
                    // Variables
                    --color: var(--color-#{$color-name});

                    // Styles
                    color: var(--color) !important;
                }
            }

            a {
                &.is-#{$color-name}\@#{$breakpoint-name}:not(.button) {
                    // Variables
                    --color: var(--color-#{$color-name});

                    // Styles
                    color: var(--color) !important;

                    // Pseudo classes
                    &:hover {
                        --color: var(--color-#{$color-name}-darken-2);
                    }

                    &:hover {
                        --color: var(--color-#{$color-name}-darken-4);
                    }

                    &:active {
                        --color: var(--color-#{$color-name}-darken-6);
                    }
                }
            }

            h1,
            h2,
            h3,
            h4,
            h5,
            h6 {
                &.is-#{$color-name}\@#{$breakpoint-name} {
                    // Variables
                    --color: var(--color-#{$color-name});

                    // Styles
                    color: var(--color) !important;
                }
            }
        }

        // Modifiers: Feedback colors
        @each $feedback-name, $color in $feedback-colors {
            p {
                &.has-#{$feedback-name}\@#{$breakpoint-name} {
                    // Variables
                    --color: var(--feedback-color-#{$feedback-name});

                    // Styles
                    color: var(--color) !important;
                }
            }

            a {
                &.has-#{$feedback-name}\@#{$breakpoint-name}:not(.button) {
                    // Variables
                    --color: var(--feedback-color-#{$feedback-name});

                    // Styles
                    color: var(--color) !important;

                    // Pseudo classes
                    &:hover {
                        --color: var(--feedback-color-#{$feedback-name}-darken-2);
                    }

                    &:active {
                        --color: var(--feedback-color-#{$feedback-name}-lighten-4);
                    }
                }
            }

            h1,
            h2,
            h3,
            h4,
            h5,
            h6 {
                &.has-#{$feedback-name}\@#{$breakpoint-name} {
                    // Variables
                    --color: var(--feedback-color-#{$feedback-name});

                    // Styles
                    color: var(--color) !important;
                }
            }
        }
    }
}
