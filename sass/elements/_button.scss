@charset 'utf-8';

/*  ========================================================================
    JUICE -> ELEMENTS -> BUTTON
    ========================================================================  */

#{$button} {
    // Variables
    --accessibility-focus-width: var(--default-accessibility-focus-width);
    --accessibility-focus-color: var(--color-primary-accessibility-focus);
    --background-color: var(--color-primary);
    --border-color: var(--color-primary-darken-3);
    --border-radius-bottom-left: var(--default-border-radius-bottom-left);
    --border-radius-bottom-right: var(--default-border-radius-bottom-right);
    --border-radius-top-left: var(--default-border-radius-top-left);
    --border-radius-top-right: var(--default-border-radius-top-right);
    --border-style: var(--default-border-style);
    --border-width-bottom: var(--default-border-width-bottom);
    --border-width-left: var(--default-border-width-left);
    --border-width-right: var(--default-border-width-right);
    --border-width-top: var(--default-border-width-top);
    --border-width-divider: var(--default-border-width-divider);
    --content-spacing: calc(var(--default-content-spacing) / 1.5);
    --element-spacing: var(--default-element-spacing);
    --font-color: var(--color-primary-inverted-text);
    --font-family: var(--secondary-typeface);
    --font-size: var(--default-font-size);
    --font-variant: normal;
    --font-weight: 300;
    --height: var(--default-element-height);
    --letter-spacing: 0;
    --text-transform: uppercase;

    // Styles
    align-items: center;
    background-color: var(--background-color);
    border: 0 var(--border-style) var(--border-color);
    border-bottom-left-radius: var(--border-radius-bottom-left);
    border-bottom-right-radius: var(--border-radius-bottom-right);
    border-top-left-radius: var(--border-radius-top-left);
    border-top-right-radius: var(--border-radius-top-right);
    border-bottom-width: var(--border-width-bottom);
    border-left-width: var(--border-width-left);
    border-right-width: var(--border-width-right);
    border-top-width: var(--border-width-top);
    color: var(--font-color);
    cursor: pointer;
    display: inline-flex;
    font-family: var(--font-family);
    font-size: var(--font-size);
    font-variant: var(--font-variant);
    font-weight: var(--font-weight);
    height: var(--height);
    justify-content: center;
    letter-spacing: var(--letter-spacing);
    margin: 0;
    margin-bottom: var(--element-spacing);
    max-width: 100%;
    outline: none;
    padding: 0 var(--content-spacing);
    position: relative;
    text-align: center;
    text-decoration: none;
    text-transform: var(--text-transform);
    user-select: none;
    white-space: nowrap;
    z-index: get-stack-index('default');

    // Pseudo classes
    &:hover {
        // Variables
        --background-color: var(--color-primary-lighten-1);
        --border-color: var(--color-primary-darken-6);

        // Styles
        z-index: get-stack-index('hover');
    }

    &:focus {
        box-shadow: 0 0 0 var(--accessibility-focus-width) var(--accessibility-focus-color);
        z-index: get-stack-index('focus');
    }

    &:active {
        // Variables
        --background-color: var(--color-primary-darken-1);
        --border-color: var(--color-primary-darken-8);

        // Styles
        z-index: get-stack-index('active');
    }

    // Modifiers: Props
    &[disabled] {
        @include disabled();
        background-color: var(--background-color) !important;
        border-color: var(--border-color) !important;
        color: var(--font-color) !important;
    }

    // Modifiers: State hooks
    &.is-fullwidth {
        display: flex;
        width: 100%;
    }

    &.is-static {
        background-color: var(--background-color);
        border-color: var(--border-color);
        box-shadow: none;
        color: var(--font-color);
        pointer-events: none;

        // Pseudo classes
        &:hover,
        &:focus,
        &:active {
            background-color: var(--background-color);
            border-color: var(--border-color);
            box-shadow: none;
            color: var(--font-color);
        }
    }

    // Modifiers: Sizes
    @each $size in $sizes {
        &.is-#{$size} {
            --font-size: var(--default-font-size-#{$size});
            --height: var(--default-element-height-#{$size});
            --content-spacing: calc(var(--default-content-spacing-#{$size}) / 1.5);
        }
    }

    // Modifiers: Colors
    @each $color-name, $color in $colors {
        &.is-#{$color-name} {
            // Variables
            --accessibility-focus-color: var(--color-#{$color-name}-accessibility-focus);
            --background-color: var(--color-#{$color-name});
            --border-color: var(--color-#{$color-name}-darken-3);
            --font-color: var(--color-#{$color-name}-inverted-text);

            // Pseudo classes
            &:hover {
                --background-color: var(--color-#{$color-name}-lighten-1);
                --border-color: var(--color-#{$color-name}-darken-6);
                --font-color: var(--color-#{$color-name}-inverted-text);
            }

            &:active {
                --background-color: var(--color-#{$color-name}-darken-1);
                --border-color: var(--color-#{$color-name}-darken-8);
                --font-color: var(--color-#{$color-name}-inverted-text);
            }
        }
    }

    // Modifiers: Feedback colors
    @each $feedback-name, $color in $feedback-colors {
        &.has-#{$feedback-name} {
            // Variables
            --accessibility-focus-color: var(--feedback-color-#{$feedback-name}-accessibility-focus);
            --background-color: var(--feedback-color-#{$feedback-name});
            --border-color: var(--feedback-color-#{$feedback-name}-darken-3);
            --font-color: var(--feedback-color-#{$feedback-name}-inverted-text);

            // Pseudo classes
            &:hover {
                --background-color: var(--feedback-color-#{$feedback-name}-lighten-1);
                --border-color: var(--feedback-color-#{$feedback-name}-darken-6);
                --font-color: var(--feedback-color-#{$feedback-name}-inverted-text);
            }

            &:active {
                --background-color: var(--feedback-color-#{$feedback-name}-darken-1);
                --border-color: var(--feedback-color-#{$feedback-name}-darken-8);
                --font-color: var(--feedback-color-#{$feedback-name}-inverted-text);
            }
        }
    }

    // Modifiers
    &.button--component {
        // Variables
        --background-color: transparent;
        --border-color: transparent;
        --font-color: inherit;
        --opacity: 0.3;

        // Styles
        background-color: var(--background-color);
        border-color: var(--border-color);
        box-shadow: none;
        color: var(--font-color);
        margin-bottom: 0;
        opacity: var(--opacity);

        // Pseudo classes
        &:hover {
            --background-color: hsla(0, 0, 0, 0.08);
            --border-color: transparent;
            --font-color: inherit;
            --opacity: 0.6;
        }

        &:focus {
            --background-color: hsla(0, 0, 0, 0.04);
            --border-color: transparent;
            --font-color: inherit;
            --opacity: 0.6;
        }

        &:active {
            --background-color: hsla(0, 0, 0, 0.12);
            --border-color:  transparent;
            --font-color: inherit;
            --opacity: 0.9;
        }

        // Modifiers: Props
        &[disabled] {
            background-color: var(--background-color) !important;
            border-color: var(--border-color) !important;
            color: var(--font-color) !important;
            opacity: var(--opacity) !important;
        }
    }

    &.button--flat {
        // Variables
        --font-color: var(--background-color);

        // Styles
        background-color: transparent;
        border-color: transparent;
        box-shadow: none;

        // Pseudo classes
        &:hover,
        &:focus {
            background-color: hsla(0, 0%, 30%, 0.08);
        }

        &:hover {
            --font-color: var(--background-color);
        }

        &:active {
            background-color: hsla(0, 0%, 30%, 0.08);
        }

        // Modifiers: Props
        &[disabled] {
            background-color: transparent !important;
            border-color: transparent !important;
            color: var(--font-color) !important;
        }
    }

    &.button--icon {
        max-width: var(--height);
        min-width: var(--height);
        padding: 0;
        width: var(--height);
    }

    &.button--outline {
        background-color: transparent;
        border-color: var(--background-color);
        color: var(--background-color);

        // Pseudo classes
        &:hover {
            background-color: var(--background-color);
            border-color: var(--background-color);
            color: var(--font-color);
        }

        // Modifiers: Props
        &[disabled] {
            background-color: var(--font-color) !important;
            border-color: var(--background-color) !important;
            color: var(--background-color) !important;
        }
    }

    &.button--pill {
        border-radius: 999px;
    }

    &.button--round {
        border-radius: 100%;
    }

    // Nested selectors
    .button__icon {
        align-items: center;
        display: inline-flex;
        justify-content: center;
        margin: 0;

        // Pseudo classes
        &:first-child:not(:only-child) {
            margin-right: calc(var(--content-spacing) / 2);
        }

        &:last-child:not(:only-child) {
            margin-left: calc(var(--content-spacing) / 2);
        }
    }
}


/*  ========================================================================
    JUICE -> ELEMENTS -> BUTTON GROUP
    ========================================================================  */

.button-group {
    // Variables
    --element-spacing: var(--default-element-spacing);

    // Styles
    display: inline-flex;
    margin-bottom: var(--element-spacing);

    // Modifiers: State hooks
    &.is-fullwidth {
        display: flex;

        // Nested selectors
        #{$button} {
            flex-grow: 1;
        }
    }

    // Modifiers: Sizes
    @each $size in $sizes {
        &.is-#{$size} {
            // Nested selectors
            #{$button} {
                --font-size: var(--default-font-size-#{$size});
                --height: var(--default-element-height-#{$size});
                --content-spacing: calc(var(--default-content-spacing-#{$size}) / 1.5);
            }
        }
    }

    // Modifiers: Colors
    @each $color-name, $color in $colors {
        &.is-#{$color-name} {
            // Nested selectors
            #{$button} {
                // Variables
                --accessibility-focus-color: var(--color-#{$color-name}-accessibility-focus);
                --background-color: var(--color-#{$color-name});
                --border-color: var(--color-#{$color-name}-darken-3);
                --font-color: var(--color-#{$color-name}-inverted-text);

                // Pseudo classes
                &:hover {
                    --background-color: var(--color-#{$color-name}-lighten-1);
                    --border-color: var(--color-#{$color-name}-darken-6);
                    --font-color: var(--color-#{$color-name}-inverted-text);
                }

                &:active {
                    --background-color: var(--color-#{$color-name}-darken-1);
                    --border-color: var(--color-#{$color-name}-darken-8);
                    --font-color: var(--color-#{$color-name}-inverted-text);
                }
            }
        }
    }

    // Modifiers: Feedback colors
    @each $feedback-name, $color in $feedback-colors {
        &.has-#{$feedback-name} {
            // Nested selectors
            #{$button} {
                // Variables
                --accessibility-focus-color: var(--feedback-color-#{$feedback-name}-accessibility-focus);
                --background-color: var(--feedback-color-#{$feedback-name});
                --border-color: var(--feedback-color-#{$feedback-name}-darken-3);
                --font-color: var(--feedback-color-#{$feedback-name}-inverted-text);

                // Pseudo classes
                &:hover {
                    --background-color: var(--feedback-color-#{$feedback-name}-lighten-1);
                    --border-color: var(--feedback-color-#{$feedback-name}-darken-6);
                    --font-color: var(--feedback-color-#{$feedback-name}-inverted-text);
                }

                &:active {
                    --background-color: var(--feedback-color-#{$feedback-name}-darken-1);
                    --border-color: var(--feedback-color-#{$feedback-name}-darken-8);
                    --font-color: var(--feedback-color-#{$feedback-name}-inverted-text);
                }
            }
        }
    }

    // Modifiers
    &.button-group--flat {
        // Nested selectors
        #{$button} {
            // Variables
            --font-color: var(--background-color);

            // Styles
            background-color: transparent;
            border-color: transparent;
            box-shadow: none;
            margin: 0 !important;

            // Pseudo classes
            &:hover,
            &:focus {
                background-color: hsla(0, 0%, 30%, 0.08);
            }

            &:hover {
                --font-color: var(--background-color);
            }

            &:active {
                background-color: hsla(0, 0%, 30%, 0.08);
            }

            // Modifiers: Props
            &[disabled] {
                background-color: transparent !important;
                border-color: transparent !important;
                color: var(--font-color) !important;
            }
        }
    }

    &.button-group--icons {
        // Nested selectors
        #{$button} {
            max-width: var(--height);
            min-width: var(--height);
            padding: 0;
            width: var(--height);
        }
    }

    &.button-group--outline {
        // Nested selectors
        #{$button} {
            background-color: transparent;
            border-color: var(--background-color);
            color: var(--background-color);

            // Pseudo classes
            &:hover {
                background-color: var(--background-color);
                border-color: var(--background-color);
                color: var(--font-color);
            }

            // Modifiers: Props
            &[disabled] {
                background-color: var(--font-color) !important;
                border-color: var(--background-color) !important;
                color: var(--background-color) !important;
            }
        }
    }

    &.button-group--pill {
        // Nested selectors
        #{$button} {
            // Pseudo classes
            &:first-child {
                border-bottom-left-radius: 999px;
                border-top-left-radius: 999px;
            }

            &:last-child {
                border-bottom-right-radius: 999px;
                border-top-right-radius: 999px;
            }
        }
    }

    // Nested selectors
    #{$button} {
        margin-bottom: 0;

        // Pseudo classes
        &:not(:only-child) {
            border-left-width: var(--border-width-divider);
            border-radius: 0;
            border-right-width: var(--border-width-divider);
            margin-right: calc(0px - var(--border-width-divider));
        }

        &:first-child {
            border-bottom-left-radius: var(--border-radius-bottom-left);
            border-left-width: var(--border-width-left);
            border-top-left-radius: var(--border-radius-top-left);
        }

        &:last-child {
            border-bottom-right-radius: var(--border-radius-bottom-right);
            border-right-width: var(--border-width-right);
            border-top-right-radius: var(--border-radius-top-right);
            margin-right: 0;
        }
    }
}
