@charset "utf-8";

/* =============================================================================================
   JUICE -> COMPONENTS -> TAG -> VARIABLES
   ============================================================================================= */

// Tag
$tag-animation-duration: 300ms !default;
$tag-border-radius--top-left: $border-radius--top-left !default;
$tag-border-radius--top-right: $border-radius--top-right !default;
$tag-border-radius--bottom-right: $border-radius--bottom-right !default;
$tag-border-radius--bottom-left: $border-radius--bottom-left !default;
$tag-border-style: $border-style !default;
$tag-border-width--top: $border-width--top !default;
$tag-border-width--right: $border-width--right !default;
$tag-border-width--bottom: $border-width--bottom !default;
$tag-border-width--left: $border-width--left !default;
$tag-border-width--divider: $border-width--divider !default;
$tag-button-background-color: base-color('white') !default;
$tag-button-background-color--hover: base-color('white', $pseudo-background-color-type--hover) !default;
$tag-button-background-color--focus: base-color('white', $pseudo-background-color-type--focus) !default;
$tag-button-background-color--active: base-color('white', $pseudo-background-color-type--active) !default;
$tag-button-border-color: base-color('white', $pseudo-border-color-type) !default;
$tag-button-border-color--hover: base-color('white', $pseudo-border-color-type--hover) !default;
$tag-button-border-color--focus: base-color('white', $pseudo-border-color-type--focus) !default;
$tag-button-border-color--active: base-color('white', $pseudo-border-color-type--active) !default;
$tag-button-font-color: base-color('white', 'invert') !default;
$tag-button-font-color--hover: base-color('white', 'invert') !default;
$tag-button-font-color--focus: base-color('white', 'invert') !default;
$tag-button-font-color--active: base-color('white', 'invert') !default;
$tag-content-spacing: $content-spacing / 2 !default;
$tag-content-spacing--small: $content-spacing--small / 2 !default;
$tag-content-spacing--large: $content-spacing--large / 2 !default;
$tag-content-spacing--huge: $content-spacing--huge / 2 !default;
$tag-element-height: $element-height - 10px !default;
$tag-element-height--small: $element-height--small - 10px  !default;
$tag-element-height--large: $element-height--large - 10px  !default;
$tag-element-height--huge: $element-height--huge - 10px  !default;
$tag-element-spacing: $element-spacing !default;
$tag-element-spacing--small: $element-spacing--small !default;
$tag-element-spacing--large: $element-spacing--large !default;
$tag-element-spacing--huge: $element-spacing--huge !default;
$tag-font-size: $font-size - 0.2em !default;
$tag-font-size--small: $font-size--small - 0.2em !default;
$tag-font-size--large: $font-size--large - 0.2em !default;
$tag-font-size--huge: $font-size--huge - 0.2em !default;
$tag-text-background-color: base-color('white') !default;
$tag-text-border-color: base-color('white', $pseudo-border-color-type) !default;
$tag-text-font-color: base-color('white', 'invert') !default;

// Tag group
$tag-group-element-spacing: $element-spacing !default;
$tag-group-element-spacing--small: $element-spacing--small !default;
$tag-group-element-spacing--large: $element-spacing--large !default;
$tag-group-element-spacing--huge: $element-spacing--huge !default;


/* =============================================================================================
   JUICE -> COMPONENTS -> TAG
   ============================================================================================= */

.tag {
    animation-duration: $tag-animation-duration;
    align-items: center;
    border-bottom-left-radius: $tag-border-radius--bottom-left;
    border-bottom-right-radius: $tag-border-radius--bottom-right;
    border-top-left-radius: $tag-border-radius--top-left;
    border-top-right-radius: $tag-border-radius--top-right;
    display: inline-flex;
    margin: 0;
    margin-bottom: $tag-element-spacing;

    // Nested selectors
    .tag__text,
    .tag__button {
        border: 0 $tag-border-style transparent;
        border-bottom-width: $tag-border-width--bottom;
        border-radius: 0;
        border-top-width: $tag-border-width--top;
        font-size: $tag-font-size;
        height: $tag-element-height;
        padding: 0 $tag-content-spacing;

        // Pseudo classes
        &:first-child {
            border-bottom-left-radius: $tag-border-radius--bottom-left;
            border-left-width: $tag-border-width--left;
            border-top-left-radius: $tag-border-radius--top-left;
        }

        &:last-child {
            border-bottom-right-radius: $tag-border-radius--bottom-right;
            border-right-width: $tag-border-width--right;
            border-top-right-radius: $tag-border-radius--top-right;
        }
    }

    .tag__text {
        background-color: $tag-text-background-color;
        border-color: $tag-text-border-color;
        color: $tag-text-font-color;
        line-height: $tag-element-height;

        // Modifiers: Base colors
        @each $name, $color in $base-colors {
            &.is-#{$name} {
                background-color: base-color($name);
                border-color: base-color($name, 'darken-3');
                color: base-color($name, 'invert');

                // Nested selectors
                a {
                    color: base-color($name, 'invert');
                }
            }
        }

        // Modifiers: Feedback colors
        @each $name, $color in $feedback-colors {
            &.has-#{$name} {
                background-color: feedback-color($name);
                border-color: feedback-color($name, 'darken-3');
                color: feedback-color($name, 'invert');

                // Nested selectors
                a {
                    color: feedback-color($name, 'invert');
                }
            }
        }
    }

    .tag__button {
        background-color: $tag-button-background-color;
        border-color: $tag-button-border-color;
        color: $tag-button-font-color;
        margin-bottom: 0;
        width: $tag-element-height;

        // Pseudo classes
        &:hover {
            background-color: $tag-button-background-color--hover;
            border-color: $tag-button-border-color--hover;
            color: $tag-button-font-color--hover;
        }

        &:focus {
            background-color: $tag-button-background-color--focus;
            border-color: $tag-button-border-color--focus;
            color: $tag-button-font-color--focus;
        }

        &:active {
            background-color: $tag-button-background-color--active;
            border-color: $tag-button-border-color--active;
            color: $tag-button-font-color--active;
        }

        &:first-child {
            border-right-width: $tag-border-width--divider;
        }

        &:last-child {
            border-left-width: $tag-border-width--divider;
        }

        // Modifiers: Base colors
        @each $name, $color in $base-colors {
            &.is-#{$name} {
                background-color: base-color($name);
                border-color: base-color($name, $pseudo-border-color-type);
                color: base-color($name, 'invert');

                // Pseudo classes
                &:hover,
                &:focus,
                &:active {
                    color: base-color($name, 'invert');
                }

                &:hover {
                    background-color: base-color($name, $pseudo-background-color-type--hover);
                    border-color: base-color($name, $pseudo-border-color-type--hover);
                }

                &:focus {
                    box-shadow: set-focus-box-shadow(base-color($name));
                }

                &:active {
                    background-color: base-color($name, $pseudo-background-color-type--active);
                    border-color: base-color($name, $pseudo-border-color-type--active);
                }
            }
        }

        // Modifiers: Feedback colors
        @each $name, $color in $feedback-colors {
            &.has-#{$name} {
                background-color: feedback-color($name);
                border-color: feedback-color($name, $pseudo-border-color-type);
                color: feedback-color($name, 'invert');

                // Pseudo classes
                &:hover,
                &:focus,
                &:active {
                    color: feedback-color($name, 'invert');
                }

                &:hover {
                    background-color: feedback-color($name, $pseudo-background-color-type--hover);
                    border-color: feedback-color($name, $pseudo-border-color-type--hover);
                }

                &:focus {
                    box-shadow: set-focus-box-shadow(feedback-color($name));
                }

                &:active {
                    background-color: feedback-color($name, $pseudo-background-color-type--active);
                    border-color: feedback-color($name, $pseudo-border-color-type--active);
                }
            }
        }
    }

    // Modifiers: Sizes
    &.is-small {
        margin-bottom: $tag-element-spacing--small;

        // Nested selectors
        .tag__text,
        .tag__button {
            font-size: $tag-font-size--small;
            height: $tag-element-height--small;
            padding: 0 $tag-content-spacing--small;
        }

        .tag__text {
            line-height: $tag-element-height--small;
        }

        .tag__button {
            width: $tag-element-height--small;
        }
    }

    &.is-large {
        margin-bottom: $tag-element-spacing--large;

        // Nested selectors
        .tag__text,
        .tag__button {
            font-size: $tag-font-size--large;
            height: $tag-element-height--large;
            padding: 0 $tag-content-spacing--large;
        }

        .tag__text {
            line-height: $tag-element-height--large;
        }

        .tag__button {
            width: $tag-element-height--large;
        }
    }

    &.is-huge {
        margin-bottom: $tag-element-spacing--huge;

        // Nested selectors
        .tag__text,
        .tag__button {
            font-size: $tag-font-size--huge;
            height: $tag-element-height--huge;
            padding: 0 $tag-content-spacing--huge;
        }

        .tag__text {
            line-height: $tag-element-height--huge;
        }

        .tag__button {
            width: $tag-element-height--huge;
        }
    }

    // Modifiers: Base colors
    @each $name, $color in $base-colors {
        &.is-#{$name} {
            // Nested selectors
            .tag__text {
                background-color: base-color($name);
                border-color: base-color($name, 'darken-3');
                color: base-color($name, 'invert');

                // Nested selectors
                a {
                    color: base-color($name, 'invert');
                }
            }

            .tag__button {
                background-color: base-color($name);
                border-color: base-color($name, $pseudo-border-color-type);
                color: base-color($name, 'invert');

                // Pseudo classes
                &:hover,
                &:focus,
                &:active {
                    color: base-color($name, 'invert');
                }

                &:hover {
                    background-color: base-color($name, $pseudo-background-color-type--hover);
                    border-color: base-color($name, $pseudo-border-color-type--hover);
                }

                &:focus {
                    box-shadow: set-focus-box-shadow(base-color($name));
                }

                &:active {
                    background-color: base-color($name, $pseudo-background-color-type--active);
                    border-color: base-color($name, $pseudo-border-color-type--active);
                }
            }
        }
    }

    // Modifiers: Feedback colors
    @each $name, $color in $feedback-colors {
        &.has-#{$name} {
            // Nested selectors
            .tag__text {
                background-color: feedback-color($name);
                border-color: feedback-color($name, 'darken-3');
                color: feedback-color($name, 'invert');

                // Nested selectors
                a {
                    color: feedback-color($name, 'invert');
                }
            }

            .tag__button {
                background-color: feedback-color($name);
                border-color: feedback-color($name, $pseudo-border-color-type);
                color: feedback-color($name, 'invert');

                // Pseudo classes
                &:hover,
                &:focus,
                &:active {
                    color: feedback-color($name, 'invert');
                }

                &:hover {
                    background-color: feedback-color($name, $pseudo-background-color-type--hover);
                    border-color: feedback-color($name, $pseudo-border-color-type--hover);
                }

                &:focus {
                    box-shadow: set-focus-box-shadow(feedback-color($name));
                }

                &:active {
                    background-color: feedback-color($name, $pseudo-background-color-type--active);
                    border-color: feedback-color($name, $pseudo-border-color-type--active);
                }
            }
        }
    }
}


/* =============================================================================================
   JUICE -> COMPONENTS -> TAG GROUP
   ============================================================================================= */

.tag-group {
    display: inline-flex;
    flex-wrap: wrap;
    margin-bottom: $tag-group-element-spacing;

    // Nested selectors
    .tag {
        margin-bottom: $tag-group-element-spacing / 2;
        margin-right: $tag-group-element-spacing / 2;

        // Pseudo classes
        &:last-child {
            margin-right: 0;
        }
    }

    // Modifiers: Sizes
    &.is-small {
        margin-bottom: $tag-group-element-spacing--small;

        // Nested selectors
        .tag {
            margin-bottom: $tag-group-element-spacing--small / 2;
            margin-right: $tag-group-element-spacing--small / 2;

            // Nested selectors
            .tag__text,
            .tag__button {
                font-size: $tag-font-size--small;
                height: $tag-element-height--small;
                padding: 0 $tag-content-spacing--small;
            }

            .tag__text {
                line-height: $tag-element-height--small;
            }

            .tag__button {
                width: $tag-element-height--small;
            }
        }
    }

    &.is-large {
        margin-bottom: $tag-group-element-spacing--large;

        // Nested selectors
        .tag {
            margin-bottom: $tag-group-element-spacing--large / 2;
            margin-right: $tag-group-element-spacing--large / 2;

            // Nested selectors
            .tag__text,
            .tag__button {
                font-size: $tag-font-size--large;
                height: $tag-element-height--large;
                padding: 0 $tag-content-spacing--large;
            }

            .tag__text {
                line-height: $tag-element-height--large;
            }

            .tag__button {
                width: $tag-element-height--large;
            }
        }
    }

    &.is-huge {
        margin-bottom: $tag-group-element-spacing--huge;

        // Nested selectors
        .tag {
            margin-bottom: $tag-group-element-spacing--huge / 2;
            margin-right: $tag-group-element-spacing--huge / 2;

            // Nested selectors
            .tag__text,
            .tag__button {
                font-size: $tag-font-size--huge;
                height: $tag-element-height--huge;
                padding: 0 $tag-content-spacing--huge;
            }

            .tag__text {
                line-height: $tag-element-height--huge;
            }

            .tag__button {
                width: $tag-element-height--huge;
            }
        }
    }
}
