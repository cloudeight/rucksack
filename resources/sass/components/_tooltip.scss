@charset 'utf-8';

/*  ========================================================================
    JUICE -> COMPONENTS -> TOOLTIP
    ========================================================================  */

// Check if the components with tooltip should be imported
@if $import-components and $import-component-tooltip {
    .tooltip {
        // Variables
        --animation-duration: 300ms;
        --arrow-size: 6px;
        --background-color: var(--color-charcoal);
        --border-radius-bottom-left: var(--default-border-radius-bottom-left);
        --border-radius-bottom-right: var(--default-border-radius-bottom-right);
        --border-radius-top-left: var(--default-border-radius-top-left);
        --border-radius-top-right: var(--default-border-radius-top-right);
        --font-color: var(--color-charcoal-inverted-text);
        --font-family: 'Trebuchet', sans-serif;
        --font-size: calc(var(--default-font-size) - 0.2em);
        --offset: 2px;
        --max-width: 200px;
        --opacity: 0.9;
        --padding: 6px 10px;

        // Styles
        animation-duration: var(--animation-duration);
        font-size: var(--font-size);
        left: 0;
        margin: 0;
        margin-top: calc(0px - calc(var(--arrow-size) + var(--offset)));
        position: absolute;
        top: 0;
        z-index: get-stack-index('tooltip');

        // Pseudo elements
        &::before {
            border-bottom: 0;
            border-left: var(--arrow-size) solid transparent;
            border-right: var(--arrow-size) solid transparent;
            border-top: var(--arrow-size) solid var(--background-color);
            content: '';
            display: block;
            height: 0;
            left: 50%;
            margin-left: calc(0px - var(--arrow-size));
            margin-top: 0;
            opacity: var(--opacity);
            position: absolute;
            top: 100%;
            width: 0;
        }

        // Check if the tooltip size modifiers should be declared
        @if $tooltip-size-modifiers {
            // Cycle through all of the sizes
            @each $size in $sizes {
                // Modifiers: Sizes
                &.is-#{$size} {
                    // Variables
                    --font-size: calc(var(--default-font-size-#{$size}) - 0.2em);
                }

                // Check if the tooltip size modifier breakpoints should be declared
                @if $tooltip-size-modifier-breakpoints {
                    // Cycle through all of the breakpoints
                    @each $breakpoint-name, $breakpoint in $breakpoints {
                        // Breakpoint
                        @include breakpoint($breakpoint-name) {
                            // Modifiers: Size
                            &.is-#{$size}\@#{$breakpoint-name} {
                                // Variables
                                --font-size: calc(var(--default-font-size-#{$size}) - 0.2em);
                            }
                        }
                    }
                }
            }
        }

        // Check if the tooltip color modifiers should be declared
        @if $tooltip-color-modifiers {
            // Cycle through all of the colors
            @each $color-name, $color in $colors {
                // Modifiers: Colors
                &.is-#{$color-name} {
                    // Variables
                    --background-color: var(--color-#{$color-name});
                    --font-color: var(--color-#{$color-name}-inverted-text);
                }
            }
        }

        // Check if the tooltip feedback modifiers should be declared
        @if $tooltip-feedback-modifiers {
            // Cycle through all of the feedback colors
            @each $feedbcak-name, $color in $feedback-colors {
                // Modifiers: Feedback colors
                &.has-#{$feedbcak-name} {
                    // Variables
                    --background-color: var(--feedback-color-#{$feedbcak-name});
                    --font-color: var(--feedback-color-#{$feedbcak-name}-inverted-text);
                }
            }
        }

        // Check if the tooltip alignment modifiers should be declared
        @if $tooltip-alignment-modifiers {
            // Modifiers
            &.tooltip--bottom {
                margin: 0;
                margin-top: calc(var(--arrow-size) + var(--offset));

                // Pseudo elements
                &::before {
                    border-bottom: var(--arrow-size) solid var(--background-color);
                    border-left: var(--arrow-size) solid transparent;
                    border-right: var(--arrow-size) solid transparent;
                    border-top: 0;
                    left: 50%;
                    margin-left: calc(0px - var(--arrow-size));
                    margin-top: calc(0px - var(--arrow-size));
                    top: 0;
                }
            }

            &.tooltip--left {
                margin: 0;
                margin-left: calc(0px - (var(--arrow-size) + var(--offset)));

                // Pseudo elements
                &::before {
                    border-bottom: var(--arrow-size) solid transparent;
                    border-left: var(--arrow-size) solid var(--background-color);
                    border-right: 0;
                    border-top: var(--arrow-size) solid transparent;
                    left: 100%;
                    margin-left: 0;
                    margin-top: calc(0px - var(--arrow-size));
                    top: 50%;
                }
            }

            &.tooltip--right {
                margin: 0;
                margin-left: calc(var(--arrow-size) + var(--offset));

                // Pseudo elements
                &::before {
                    border-bottom: var(--arrow-size) solid transparent;
                    border-left: 0;
                    border-right: var(--arrow-size) solid var(--background-color);
                    border-top: var(--arrow-size) solid transparent;
                    left: 0;
                    margin-left: calc(0px - var(--arrow-size));
                    margin-top: calc(0px - var(--arrow-size));
                    top: 50%;
                }
            }
        }

        // Nested selectors
        .tooltip__content {
            background-color: var(--background-color);
            border: 0;
            border-bottom-left-radius: var(--border-radius-bottom-left);
            border-bottom-right-radius: var(--border-radius-bottom-right);
            border-top-left-radius: var(--border-radius-top-left);
            border-top-right-radius: var(--border-radius-top-right);
            color: var(--font-color);
            display: inline-block;
            font-family: var(--font-family);
            line-height: 1.6;
            max-width: var(--max-width);
            opacity: var(--opacity);
            padding: var(--padding);
            text-align: center;
        }
    }
}
