@charset 'utf-8';

/*  ========================================================================
    JUICE -> COMPONENTS -> PANEL
    ========================================================================  */

// Check if the components with panel should be imported
@if $import-components and $import-component-panel {
    .panel {
        // Variables
        --animation-duration: 300ms;
        --background-color: var(--color-white);
        --border-color: var(--color-white-darken-3);
        --border-radius-bottom-left: var(--default-border-radius-bottom-left);
        --border-radius-bottom-right: var(--default-border-radius-bottom-right);
        --border-radius-top-left: var(--default-border-radius-top-left);
        --border-radius-top-right: var(--default-border-radius-top-right);
        --border-style: var(--default-border-style);
        --border-width-bottom: var(--default-border-width-bottom);
        --border-width-divider: var(--default-border-width-divider);
        --border-width-left: var(--default-border-width-left);
        --border-width-right: var(--default-border-width-right);
        --border-width-top: var(--default-border-width-top);
        --box-shadow: var(--default-box-shadow);
        --content-spacing: var(--default-content-spacing);
        --element-spacing: var(--default-element-spacing);
        --font-color: var(--font-color-default);
        --font-size: var(--default-font-size);

        // Styles
        animation-duration: var(--animation-duration);
        border: 0 var(--border-style) transparent;
        border-bottom-left-radius: var(--border-radius-bottom-left);
        border-bottom-right-radius: var(--border-radius-bottom-right);
        border-top-left-radius: var(--border-radius-top-left);
        border-top-right-radius: var(--border-radius-top-right);
        box-shadow: var(--box-shadow);
        display: flex;
        flex-direction: column;
        font-size: var(--font-size);
        margin: 0;
        margin-bottom: var(--element-spacing);
        padding: 0;

        // Modifiers: State hooks
        &.is-collapsed {
            // Nested selectors
            .panel__head {
                border-bottom-left-radius: var(--border-radius-bottom-left);
                border-bottom-right-radius: var(--border-radius-bottom-right);
                border-bottom-width: var(--border-width-bottom);

                // Nested selectors
                .panel__actions {
                    // Nested selectors
                    .panel__collapse {
                        display: inline-flex;
                    }

                    .panel__expand {
                        display: none;
                    }
                }
            }

            .panel__body {
                display: none;
            }
        }

        &.is-expanded {
            // Nested selectors
            .panel__head {
                // Nested selectors
                .panel__actions {
                    // Nested selectors
                    .panel__collapse {
                        display: none;
                    }

                    .panel__expand {
                        display: inline-flex;
                    }
                }
            }
        }

        // Check if the panel size modifiers should be declared
        @if $panel-size-modifiers {
            // Cycle through all of the sizes
            @each $size in $sizes {
                // Modifiers: Sizes
                &.is-#{$size} {
                    // Variables
                    --content-spacing: var(--default-content-spacing-#{$size});
                    --font-size: var(--default-font-size-#{$size});
                }

                // Check if the panel size modifier breakpoints should be declared
                @if $panel-size-modifier-breakpoints {
                    // Cycle through all of the breakpoints
                    @each $breakpoint-name, $breakpoint in $breakpoints {
                        // Breakpoint
                        @include breakpoint($breakpoint-name) {
                            // Modifiers: Size
                            &.is-#{$size}\@#{$breakpoint-name} {
                                // Variables
                                --content-spacing: var(--default-content-spacing-#{$size});
                                --font-size: var(--default-font-size-#{$size});
                            }
                        }
                    }
                }
            }
        }

        // Check if the panel color modifiers should be declared
        @if $panel-color-modifiers {
            // Cycle through all of the colors
            @each $color-name, $color in $colors {
                // Modifiers: Colors
                &.is-#{$color-name} {
                    // Nested selectors
                    .panel__head {
                        // Variables
                        --background-color: var(--color-#{$color-name});
                        --border-color: var(--color-#{$color-name}-darken-3);
                        --font-color: var(--color-#{$color-name}-inverted-text);
                    }
                }
            }
        }

        // Check if the panel feedback modifiers should be declared
        @if $panel-feedback-modifiers {
            // Cycle through all of the feedback colors
            @each $feedback-name, $color in $feedback-colors {
                // Modifiers: Feedback colors
                &.has-#{$feedback-name} {
                    // Nested selectors
                    .panel__head {
                        // Variables
                        --background-color: var(--feedback-color-#{$feedback-name});
                        --border-color: var(--feedback-color-#{$feedback-name}-darken-3);
                        --font-color: var(--feedback-color-#{$feedback-name}-inverted-text);
                    }
                }
            }
        }

        // Nested selectors
        a:not(.button) {
            // Variables
            --font-color: var(--default-link-color);

            // Styles
            color: var(--font-color);

            // Pseudo classes
            &:hover {
                // Variables
                --font-color: var(--default-link-color-hover);
            }

            &:focus {
                // Variables
                --font-color: var(--default-link-color-focus);
            }

            &:active {
                // Variables
                --font-color: var(--default-link-color-active);
            }
        }

        .panel__head,
        .panel__body {
            border: 0 var(--border-style) transparent;
            padding: var(--content-spacing);
        }

        .panel__head {
            // Variables
            --background-color: var(--color-white);
            --border-color: var(--color-white-darken-3);
            --font-color: var(--font-color-default);

            // Styles
            align-items: center;
            background-color: var(--background-color);
            border-bottom-width: var(--border-width-divider);
            border-color: var(--border-color);
            border-left-width: var(--border-width-left);
            border-right-width: var(--border-width-right);
            border-top-left-radius: var(--border-radius-top-left);
            border-top-right-radius: var(--border-radius-top-right);
            border-top-width: var(--border-width-top);
            color: var(--font-color);
            display: flex;

            // Nested selectors
            .panel__headings {
                flex-grow: 1;

                // Nested selectors
                #{$heading},
                .panel__heading {
                    margin-bottom: 0;
                    opacity: 0.5;

                    // Pseudo classes
                    &:first-child {
                        opacity: 1;
                    }
                }
            }

            .panel__actions {
                align-items: center;
                display: flex;
            }
        }

        .panel__body {
            background-color: var(--background-color);
            border-bottom-left-radius: var(--border-radius-bottom-left);
            border-bottom-right-radius: var(--border-radius-bottom-right);
            border-bottom-width: var(--border-width-bottom);
            border-color: var(--border-color);
            border-left-width: var(--border-width-left);
            border-right-width: var(--border-width-right);
            color: var(--font-color);
        }
    }
}
