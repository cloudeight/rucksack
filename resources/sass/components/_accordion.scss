@charset 'utf-8';

/*  ========================================================================
    JUICE -> COMPONENTS -> ACCORDION
    ========================================================================  */

.accordion {
    // Variables
    --background-color: var(--color-white);
    --border-color: var(--color-white-darken-3);
    --border-radius-bottom-left: var(--default-border-radius-bottom-left);
    --border-radius-bottom-right: var(--default-border-radius-bottom-right);
    --border-radius-top-left: var(--default-border-radius-top-left);
    --border-radius-top-right: var(--default-border-radius-top-right);
    --border-style: var(--default-border-style);
    --border-width-bottom: var(--default-border-width-bottom);
    --border-width-divider: var(--default-border-width-divider);
    --border-width-left: var(--default-border-width-left);
    --border-width-right: var(--default-border-width-right);
    --border-width-top: var(--default-border-width-top);
    --box-shadow: var(--default-box-shadow);
    --content-spacing: var(--default-content-spacing);
    --element-spacing: var(--default-element-spacing);
    --font-color: var(--font-color-default);
    --font-size: var(--default-font-size);

    // Styles
    border: 0 var(--border-style) transparent;
    border-bottom-left-radius: var(--border-radius-bottom-left);
    border-bottom-right-radius: var(--border-radius-bottom-right);
    border-top-left-radius: var(--border-radius-top-left);
    border-top-right-radius: var(--border-radius-top-right);
    box-shadow: var(--box-shadow);
    display: flex;
    flex-direction: column;
    font-size: var(--font-size);
    margin-bottom: var(--element-spacing);

    // Check if the accordion size modifiers should be declared
    @if $accordion-size-modifiers {
        // Cycle through all of the sizes
        @each $size in $sizes {
            // Modifiers: Sizes
            &.is-#{$size} {
                // Variables
                --content-spacing: var(--default-content-spacing-#{$size});
                --font-size: var(--default-font-size-#{$size});
            }

            // Check if the accordion size modifier breakpoints should be declared
            @if $accordion-size-modifier-breakpoints {
                // Cycle through all of the breakpoints
                @each $breakpoint-name, $breakpoint in $breakpoints {
                    // Breakpoint
                    @include breakpoint($breakpoint-name) {
                        // Modifiers: Size
                        &.is-#{$size}\@#{$breakpoint-name} {
                            // Variables
                            --content-spacing: var(--default-content-spacing-#{$size});
                            --font-size: var(--default-font-size-#{$size});
                        }
                    }
                }
            }
        }
    }

    // Check if the accordion color modifiers should be declared
    @if $accordion-color-modifiers {
        // Cycle through all of the colors
        @each $color-name, $color in $colors {
            // Modifiers: Colors
            &.is-#{$color-name} {
                // Nested selectors
                .accordion__item {
                    // Nested selectors
                    .accordion__head {
                        // Variables
                        --background-color: var(--color-#{$color-name});
                        --border-color: var(--color-#{$color-name}-darken-3);
                        --font-color: var(--color-#{$color-name}-inverted-text);
                    }
                }
            }
        }
    }

    // Check if the accordion spaced modifier should be declared
    @if $accordion-spaced-modifier {
        // Modifiers
        &.accordion--spaced {
            box-shadow: none;
            margin-bottom: 0;

            // Nested selectors
            .accordion__item {
                box-shadow: none;
                margin-bottom: var(--content-spacing);

                // Modifiers: State hooks
                &.is-collapsed {
                    // Nested selectors
                    .accordion__head {
                        border-bottom-left-radius: var(--border-radius-bottom-left);
                        border-bottom-right-radius: var(--border-radius-bottom-right);
                        border-bottom-width: var(--border-width-bottom);
                    }
                }

                // Nested selectors
                .accordion__head {
                    border-top-left-radius: var(--border-radius-top-left);
                    border-top-right-radius: var(--border-radius-top-right);
                    border-top-width: var(--border-width-top);
                }

                .accordion__body {
                    border-bottom-left-radius: var(--border-radius-bottom-left);
                    border-bottom-right-radius: var(--border-radius-bottom-right);
                    border-bottom-width: var(--border-width-bottom);
                }
            }
        }
    }

    // Nested selectors
    a {
        // Variables
        --font-color: var(--default-link-color);

        // Styles
        color: var(--font-color);

        // Pseudo classes
        &:hover {
            // Variables
            --font-color: var(--default-link-color-hover);
        }

        &:focus {
            // Variables
            --font-color: var(--default-link-color-focus);
        }

        &:active {
            // Variables
            --font-color: var(--default-link-color-active);
        }
    }

    .accordion__item {
        // Pseudo classes
        &:first-child {
            // Nested selectors
            .accordion__head {
                border-top-left-radius: var(--border-radius-top-left);
                border-top-right-radius: var(--border-radius-top-right);
                border-top-width: var(--border-width-top);
            }
        }

        &:last-child {
            // Modifiers: State hooks
            &.is-collapsed {
                // Nested selectors
                .accordion__head {
                    border-bottom-left-radius: var(--border-radius-bottom-left);
                    border-bottom-right-radius: var(--border-radius-bottom-right);
                    border-bottom-width: var(--border-width-bottom);
                }
            }

            // Nested selectors
            .accordion__body {
                border-bottom-left-radius: var(--border-radius-bottom-left);
                border-bottom-right-radius: var(--border-radius-bottom-right);
                border-bottom-width: var(--border-width-bottom);
            }
        }

        // Modifiers: State hooks
        &.is-collapsed {
            // Nested selectors
            .accordion__head {
                margin-bottom: calc(0px - var(--border-width-divider));

                // Nested selectors
                .accordion__action {
                    // Nested selectors
                    .accordion__collapse {
                        display: inline-flex;
                    }

                    .accordion__expand {
                        display: none;
                    }
                }
            }

            .accordion__body {
                display: none;
            }
        }

        &.is-expanded {
            // Nested selectors
            .accordion__head {
                // Nested selectors
                .accordion__action {
                    // Nested selectors
                    .accordion__collapse {
                        display: none;
                    }

                    .accordion__expand {
                        display: inline-flex;
                    }
                }
            }
        }

        // Nested selectors
        .accordion__head,
        .accordion__body {
            border: 0 var(--border-style) transparent;
            padding: var(--content-spacing);
        }

        .accordion__head {
            // Variables
            --background-color: var(--color-white);
            --border-color: var(--color-white-darken-3);
            --font-color: var(--font-color-default);

            // Styles
            align-items: center;
            background-color: var(--background-color);
            border-bottom-width: var(--border-width-divider);
            border-color: var(--border-color);
            border-left-width: var(--border-width-left);
            border-right-width: var(--border-width-right);
            border-top-width: var(--border-width-divider);
            color: var(--font-color);
            display: flex;
            cursor: pointer;
            position: relative;
            user-select: none;
            z-index: 2;

            // Nested selectors
            .accordion__heading {
                flex-grow: 1;

                // Nested selectors
                h1,
                h2,
                h3,
                h4,
                h5,
                h6,
                .accordion__heading {
                    margin-bottom: 0;
                    opacity: 0.5;

                    // Pseudo classes
                    &:first-child {
                        opacity: 1;
                    }
                }
            }

            .accordion__action {
                align-items: center;
                display: flex;
            }
        }

        .accordion__body {
            background-color: var(--background-color);
            border-color: var(--border-color);
            border-left-width: var(--border-width-left);
            border-right-width: var(--border-width-right);
            color: var(--font-color);
            position: relative;
            z-index: 1;
        }
    }
}
