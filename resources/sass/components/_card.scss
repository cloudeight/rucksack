@charset 'utf-8';

/*  ========================================================================
    JUICE -> COMPONENTS -> CARD
    ========================================================================  */

// Check if the components with card should be imported
@if $import-components and $import-component-card {
    .card {
        // Variables
        --animation-duration: 300ms;
        --background-color: var(--color-white);
        --border-color: var(--color-white-darken-3);
        --border-radius-bottom-left: var(--default-border-radius-bottom-left);
        --border-radius-bottom-right: var(--default-border-radius-bottom-right);
        --border-radius-top-left: var(--default-border-radius-top-left);
        --border-radius-top-right: var(--default-border-radius-top-right);
        --border-style: var(--default-border-style);
        --border-width-bottom: var(--default-border-width-bottom);
        --border-width-left: var(--default-border-width-left);
        --border-width-right: var(--default-border-width-right);
        --border-width-top: var(--default-border-width-top);
        --box-shadow: var(--default-box-shadow);
        --content-spacing: var(--default-content-spacing);
        --element-spacing: var(--default-element-spacing);
        --font-color: var(--font-color-default);
        --font-size: var(--default-font-size);

        // Styles
        animation-duration: var(--animation-duration);
        background-color: var(--background-color);
        border: 0 var(--border-style) var(--border-color);
        border-bottom-left-radius: var(--border-radius-bottom-left);
        border-bottom-right-radius: var(--border-radius-bottom-right);
        border-bottom-width: var(--border-width-bottom);
        border-left-width: var(--border-width-left);
        border-top-left-radius: var(--border-radius-top-left);
        border-top-right-radius: var(--border-radius-top-right);
        border-top-width: var(--border-width-top);
        border-right-width: var(--border-width-right);
        box-shadow: var(--box-shadow);
        color: var(--font-color);
        display: flex;
        flex-direction: column;
        font-size: var(--font-size);
        margin: 0;
        margin-bottom: var(--element-spacing);
        padding: 0;

        // Check if the card size modifiers should be declared
        @if $card-size-modifiers {
            // Cycle through all of the sizes
            @each $size in $sizes {
                // Modifiers: Sizes
                &.is-#{$size} {
                    // Variables
                    --font-size: var(--default-font-size-#{$size});
                    --content-spacing: var(--default-content-spacing-#{$size});
                }

                // Check if the card size modifier breakpoints should be declared
                @if $card-size-modifier-breakpoints {
                    // Cycle through all of the breakpoints
                    @each $breakpoint-name, $breakpoint in $breakpoints {
                        // Breakpoint
                        @include breakpoint($breakpoint-name) {
                            // Modifiers: Size
                            &.is-#{$size}\@#{$breakpoint-name} {
                                // Variables
                                --font-size: var(--default-font-size-#{$size});
                                --content-spacing: var(--default-content-spacing-#{$size});
                            }
                        }
                    }
                }
            }
        }

        // Nested selectors
        a:not(.button) {
            // Variables
            --font-color: var(--default-link-color);

            // Styles
            color: var(--font-color);

            // Pseudo classes
            &:hover {
                // Variables
                --font-color: var(--default-link-color-hover);
            }

            &:focus {
                // Variables
                --font-color: var(--default-link-color-focus);
            }

            &:active {
                // Variables
                --font-color: var(--default-link-color-active);
            }
        }

        .card__media {
            border-top-left-radius: var(--border-radius-top-left);
            border-top-right-radius: var(--border-radius-top-right);
            overflow: hidden;
            padding: 0;

            // Modifiers
            &.card__media--iframe {
                height: 0;
                padding: 25px 0 56.25%;
                position: relative;
            }

            // Nested selectors
            iframe {
                height: 100%;
                left: 0;
                position: absolute;
                top: 0;
                width: 100%;
            }

            img,
            video {
                display: flex;
                height: auto;
                width: 100%;
            }
        }

        .card__content {
            padding: var(--content-spacing);

            // Nested selectors
            .card__head,
            .card__body,
            .card__foot {
                padding-bottom: var(--content-spacing);

                // Pseudo classes
                &:last-child {
                    padding-bottom: 0;
                }
            }

            .card__head,
            .card__foot {
                display: flex;

                // Nested selectors
                .card__actions {
                    align-items: center;
                    display: flex;
                }
            }

            .card__head {
                align-items: center;

                // Nested selectors
                .card__headings {
                    flex-grow: 1;

                    // Nested selectors
                    #{$heading},
                    .card__heading {
                        margin-bottom: 0;
                        opacity: 0.5;

                        // Pseudo classes
                        &:first-child {
                            opacity: 1;
                        }
                    }
                }

                .card__actions {
                    justify-content: flex-end;
                }
            }

            .card__foot {
                // Nested selectors
                .card__actions,
                .card__buttons {
                    align-items: center;
                    display: flex;
                }

                .card__buttons {
                    flex-grow: 1;
                    justify-content: flex-end;

                    // Nested selectors
                    #{$button} {
                        margin-bottom: 0;
                        margin-left: calc(var(--content-spacing) / 2);

                        // Pseudo classes
                        &:first-child {
                            margin-left: 0;
                        }
                    }
                }
            }
        }
    }
}
