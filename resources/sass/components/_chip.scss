@charset 'utf-8';

/*  ========================================================================
    JUICE -> COMPONENTS -> CHIP
    ========================================================================  */

// Check if the components with chip should be imported
@if $import-components and $import-component-chip {
    .chip {
        // Variables
        --animation-duration: 300ms;
        --background-color: var(--color-white);
        --border-color: var(--color-white-darken-3);
        --border-radius-bottom-left: var(--default-border-radius-bottom-left);
        --border-radius-bottom-right: var(--default-border-radius-bottom-right);
        --border-radius-top-left: var(--default-border-radius-top-left);
        --border-radius-top-right: var(--default-border-radius-top-right);
        --border-style: var(--default-border-style);
        --border-width-bottom: var(--default-border-width-bottom);
        --border-width-left: var(--default-border-width-left);
        --border-width-right: var(--default-border-width-right);
        --border-width-top: var(--default-border-width-top);
        --content-spacing: calc(var(--default-content-spacing) / 2);
        --element-spacing: var(--default-element-spacing);
        --font-color: var(--font-color-default);
        --font-size: calc(var(--default-font-size) - 0.2em);
        --height: var(--default-element-height);

        // Styles
        animation-duration: var(--animation-duration);
        align-items: center;
        background-color: var(--background-color);
        border: 0 var(--border-style) var(--border-color);
        border-bottom-left-radius: var(--border-radius-bottom-left);
        border-bottom-right-radius: var(--border-radius-bottom-right);
        border-bottom-width: var(--border-width-bottom);
        border-left-width: var(--border-width-left);
        border-right-width: var(--border-width-right);
        border-top-left-radius: var(--border-radius-top-left);
        border-top-right-radius: var(--border-radius-top-right);
        border-top-width: var(--border-width-top);
        color: var(--font-color);
        display: inline-flex;
        font-size: var(--font-size);
        height: var(--height);
        margin: 0;
        margin-bottom: var(--element-spacing);

        // Check if the chip size modifiers should be declared
        @if $chip-size-modifiers {
            // Cycle through all of the sizes
            @each $size in $sizes {
                // Modifiers: Sizes
                &.is-#{$size} {
                    // Variables
                    --content-spacing: calc(var(--default-content-spacing-#{$size}) / 2);
                    --font-size: calc(var(--default-font-size-#{$size}) - 0.2em);
                    --height: var(--default-element-height-#{$size});
                }

                // Check if the chip size modifier breakpoints should be declared
                @if $chip-size-modifier-breakpoints {
                    // Cycle through all of the breakpoints
                    @each $breakpoint-name, $breakpoint in $breakpoints {
                        // Breakpoint
                        @include breakpoint($breakpoint-name) {
                            // Modifiers: Size
                            &.is-#{$size}\@#{$breakpoint-name} {
                                // Variables
                                --content-spacing: calc(var(--default-content-spacing-#{$size}) / 2);
                                --font-size: calc(var(--default-font-size-#{$size}) - 0.2em);
                                --height: var(--default-element-height-#{$size});
                            }
                        }
                    }
                }
            }
        }

        // Check if the chip color modifiers should be declared
        @if $chip-color-modifiers {
            // Cycle through all of the colors
            @each $color-name, $color in $colors {
                // Modifiers: Colors
                &.is-#{$color-name} {
                    // Variables
                    --background-color: var(--color-#{$color-name});
                    --border-color: var(--color-#{$color-name}-darken-3);
                    --font-color: var(--color-#{$color-name}-inverted-text);
                }
            }
        }

        // Check if the chip feedback modifiers should be declared
        @if $chip-feedback-modifiers {
            // Cycle through all of the feedback colors
            @each $feedback-name, $color in $feedback-colors {
                // Modifiers: Feedback colors
                &.has-#{$feedback-name} {
                    // Variables
                    --background-color: var(--feedback-color-#{$feedback-name});
                    --border-color: var(--feedback-color-#{$feedback-name}-darken-3);
                    --font-color: var(--feedback-color-#{$feedback-name}-inverted-text);
                }
            }
        }

        // Check if the chip pill modifier should be declared
        @if $chip-pill-modifier {
            // Modifiers
            &.chip--pill {
                border-radius: 999px;

                // Nested selectors
                .chip__media {
                    // Nested selectors
                    img {
                        border-radius: 999px;
                    }
                }

                .chip__action {
                    // Nested selectors
                    #{$button} {
                        border-radius: 999px;
                    }
                }
            }
        }

        // Nested selectors
        a {
            // Variables
            --font-color: var(--default-link-color);

            // Styles
            color: var(--font-color);

            // Pseudo classes
            &:hover {
                // Variables
                --font-color: var(--default-link-color-hover);
            }

            &:focus {
                // Variables
                --font-color: var(--default-link-color-focus);
            }

            &:active {
                // Variables
                --font-color: var(--default-link-color-active);
            }
        }

        .chip__media,
        .chip__text,
        .chip__action {
            padding: 0 calc(var(--content-spacing) / 2);

            // Pseudo classes
            &:only-child {
                // Modifiers
                &.chip__text {
                    padding: 0 var(--content-spacing);
                }
            }

            &:first-child {
                // Modifiers
                &.chip__text,
                &.chip__action {
                    padding-left: var(--content-spacing);
                }
            }

            &:last-child {
                // Modifiers
                &.chip__text,
                &.chip__action {
                    padding-right: var(--content-spacing);
                }
            }
        }

        .chip__text,
        .chip__action {
            align-items: center;
            align-self: stretch;
            display: flex;
            justify-content: center;
        }

        .chip__media {
            padding-bottom: calc(var(--content-spacing) / 2);
            padding-top: calc(var(--content-spacing) / 2);
            height: 100%;

            // Nested selectors
            img {
                border-bottom-left-radius: var(--border-radius-bottom-left);
                border-bottom-right-radius: var(--border-radius-bottom-right);
                border-top-left-radius: var(--border-radius-top-left);
                border-top-right-radius: var(--border-radius-top-right);
                display: flex;
                height: 100%;
                max-width: none;
            }
        }

        .chip__text {
            white-space: nowrap;
        }

        .chip__action {
            // Nested selectors
            #{$button} {
                height: calc(var(--height) / 2);
                padding: 0;
                width: calc(var(--height) / 2);
            }
        }
    }
}
