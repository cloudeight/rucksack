@charset 'utf-8';

:root {
    // Cycle through all of the feedback colors
    @each $color-name, $color-value in $feedback-colors {
        // Check if the color value is a type of color
        @if type_of($color-value) == 'color' {
            // Set the accessibility focus, grayscale and text colors (sass)
            $accessibility-focus-color: transparentize($color-value, 0.5);
            $grayscale-color: grayscale($color-value);
            $text-color: null;

            // Set the perceived red, green and blue lightness
            $red: (red($color-value) * 0.2126);
            $green: (green($color-value) * 0.7152);
            $blue: (blue($color-value) * 0.0722);

            // Set the red, green and blue total
            $rgb-total: ($red + $green + $blue);

            // Set the perceived lightness
            $perceived-lightness: ($rgb-total / 255);

            // Set the srgb lightness
            $srgb-lightness: (($perceived-lightness - 0.75) * -10000000);

            // Check if the srgb lightness is over 50
            @if $srgb-lightness >= 50 {
                // Set the text color (sass)
                $text-color: map($font-colors, 'light');
            } @else {
                // Set the text color (sass)
                $text-color: map($font-colors, 'dark');
            }

            // Set the base, accessibility focus, grayscale and text colors (custom properties)
            --feedback-color-#{$color-name}: #{$color-value};
            --feedback-color-#{$color-name}-accessibility-focus: #{$accessibility-focus-color};
            --feedback-color-#{$color-name}-grayscale: #{$grayscale-color};
            --feedback-color-#{$color-name}-text: #{$text-color};

            // Cycle through all of the color variations
            @each $variation-name, $variation-amount in $color-variations {
                // Check if the variation name contains the lighten string
                @if str-index($variation-name, 'lighten') != null {
                    // Set the variation base, accessibility, grayscale and text colors (custom properties)
                    --feedback-color-#{$color-name}-#{$variation-name}: #{lighten($color-value, $variation-amount)};
                    --feedback-color-#{$color-name}-#{$variation-name}-accessibility-focus: #{lighten($accessibility-focus-color, $variation-amount)};
                    --feedback-color-#{$color-name}-#{$variation-name}-grayscale: #{lighten($grayscale-color, $variation-amount)};
                    // --feedback-color-#{$color-name}-#{$variation-name}-text: #{lighten($text-color, $variation-amount)};
                }

                // Check if the variation name contains the darken string
                @if str-index($variation-name, 'darken') != null {
                    // Set the variation base, accessibility, grayscale and text colors (custom properties)
                    --feedback-color-#{$color-name}-#{$variation-name}: #{darken($color-value, $variation-amount)};
                    --feedback-color-#{$color-name}-#{$variation-name}-accessibility-focus: #{darken($accessibility-focus-color, $variation-amount)};
                    --feedback-color-#{$color-name}-#{$variation-name}-grayscale: #{darken($grayscale-color, $variation-amount)};
                    // --feedback-color-#{$color-name}-#{$variation-name}-text: #{darken($text-color, $variation-amount)};
                }
            }
        }
    }
}
