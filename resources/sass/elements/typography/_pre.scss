@charset 'utf-8';

// Check if the elements with pre should be imported
@if $import-elements and $import-element-pre {
    pre {
        background-color: $pre-background-color;
        border: 0 $pre-border-style $pre-border-color;
        border-bottom-left-radius: $pre-border-radius-bottom-left;
        border-bottom-right-radius: $pre-border-radius-bottom-right;
        border-bottom-width: $pre-border-width-bottom;
        border-left-width: $pre-border-width-left;
        border-right-width: $pre-border-width-right;
        border-top-left-radius: $pre-border-radius-top-left;
        border-top-right-radius: $pre-border-radius-top-right;
        border-top-width: $pre-border-width-top;
        box-shadow: none;
        color: $pre-font-color;
        display: block;
        font-family: $pre-font-family;
        margin-bottom: element-spacing();
        overflow-x: auto;
        padding: content-spacing(map($pre-content-spacing-multipliers, 'medium'));
        position: relative;
        white-space: pre-wrap;

        // Pseudo elements
        &::after {
            content: attr(data-language);
            display: block;
            font-family: $global-monoface-typeface;
            font-size: 75%;
            padding: 5px 10px;
            position: absolute;
            right: 0;
            text-transform: uppercase;
            top: 0;
        }

        // Check if the pre size modifiers should be declared
        @if $pre-size-modifiers {
            // Cycle through all of the sizes
            @each $size in $sizes {
                // Modifiers: Sizes
                &.is-#{$size} {
                    padding: content-spacing(map($pre-content-spacing-multipliers, $size));
                }

                // Check if the pre size modifiers with breakpoints should be declared
                @if $pre-size-modifiers-with-breakpoints {
                    // Cycle through all of the breakpoints
                    @each $breakpoint-name, $breakpoint-value in $breakpoints {
                        // Breakpoints
                        @include breakpoint($breakpoint-name) {
                            // Modifiers: Sizes
                            &.is-#{$size}\@#{$breakpoint-name} {
                                padding: content-spacing(map($pre-content-spacing-multipliers, $size));
                            }
                        }
                    }
                }
            }
        }

        // Nested selectors
        code {
            background-color: transparent;
            color: inherit;
            font-size: inherit;
            white-space: nowrap;
        }
    }
}
