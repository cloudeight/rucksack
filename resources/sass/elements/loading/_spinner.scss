@charset 'utf-8';

/*  ========================================================================
    JUICE -> ELEMENTS -> LOADING -> SPINNER
    ========================================================================  */

// Check if the elements with spinner should be imported
@if $import-elements and $import-element-spinner {
    .spinner {
        // Variables
        --animation-duration: 1000ms;
        --color: var(--color-charcoal);
        --color-alt: var(--color-charcoal-lighten-10);
        --element-size: 40px;

        // Styles
        align-items: center;
        display: inline-flex;
        justify-content: center;
        position: relative;

        // Check if the spinner dial modifier should be declared
        @if $spinner-dial-modifier {
            // Set the keyframe
            @keyframes spinner-dial {
                100% {
                    transform: rotate(360deg);
                }
            }

            // Modifiers
            &.spinner--dial {
                animation-duration: var(--animation-duration);
                animation-iteration-count: infinite;
                animation-name: spinner-dial;
                animation-timing-function: linear;
                border: 2px solid var(--color);
                border-radius: 100%;
                display: inline-flex;
                height: var(--element-size);
                width: var(--element-size);

                // Pseudo elements
                &::before {
                    animation: none;
                    background-color: var(--color);
                    border-radius: 100%;
                    content: '';
                    height: 4px;
                    position: absolute;
                    top: 4px;
                    width: 4px;
                }

                // Cycle through all of the colors
                @each $color-name, $color in $colors {
                    // Modifiers: Colors
                    &.is-#{$color-name} {
                        // Variables
                        --color: var(--color-#{$color-name});
                    }
                }
            }
        }

        // Check if the spinner ring modifier should be declared
        @if $spinner-ring-modifier {
            // Set the keyframe
            @keyframes spinner-ring {
                100% {
                    transform: rotate(360deg);
                }
            }

            // Modifiers
            &.spinner--ring {
                animation-duration: var(--animation-duration);
                animation-iteration-count: infinite;
                animation-name: spinner-ring;
                animation-timing-function: linear;
                border: 5px solid var(--color-alt);
                border-radius: 100%;
                display: inline-flex;
                height: var(--element-size);
                width: var(--element-size);

                // Pseudo elements
                &::before {
                    animation: none;
                    background: var(--color);
                    border-radius: 100%;
                    content: '';
                    height: 5px;
                    position: absolute;
                    top: -5px;
                    width: 5px;
                }

                // Cycle through all of the colors
                @each $color-name, $color in $colors {
                    // Modifiers: Colors
                    &.is-#{$color-name} {
                        // Variables
                        --color: var(--color-#{$color-name});
                        --color-alt: var(--color-#{$color-name}-lighten-10);
                    }
                }
            }
        }

        // Check if the spinner spiral modifier should be declared
        @if $spinner-spiral-modifier {
            // Set the keyframe
            @keyframes spinner-spiral {
                100% {
                    transform: rotate(360deg);
                }
            }

            // Modifiers
            &.spinner--spiral,
            &.spinner--spiral-x2,
            &.spinner--spiral-x3 {
                animation-duration: var(--animation-duration);
                animation-iteration-count: infinite;
                animation-name: spinner-spiral;
                animation-timing-function: linear;
                border: 1px solid var(--color-alt);
                border-radius: 100%;
                border-top-color: var(--color);
                display: inline-flex;
                height: var(--element-size);
                width: var(--element-size);

                // Cycle through all of the colors
                @each $color-name, $color in $colors {
                    // Modifiers: Colors
                    &.is-#{$color-name} {
                        // Variables
                        --color: var(--color-#{$color-name});
                        --color-alt: var(--color-#{$color-name}-lighten-10);
                    }
                }
            }

            &.spinner--spiral {
                border-width: 2px;
            }

            &.spinner--spiral-x2 {
                // Pseudo elements
                &::before {
                    animation-duration: calc(var(--animation-duration) * 3);
                    animation-iteration-count: infinite;
                    animation-name: spinner-spiral;
                    animation-timing-function: linear;
                    border: 1px solid var(--color-alt);
                    border-radius: 100%;
                    border-top-color: var(--color);
                    content: '';
                    height: calc(var(--element-size) - 8px);
                    position: absolute;
                    width: calc(var(--element-size) - 8px);
                }
            }

            &.spinner--spiral-x3 {
                // Pseudo elements
                &::before,
                &::after {
                    animation-iteration-count: infinite;
                    animation-name: spinner-spiral;
                    animation-timing-function: linear;
                    border: 1px solid var(--color-alt);
                    border-radius: 100%;
                    border-top-color: var(--color);
                    content: '';
                    position: absolute;
                }

                &::before {
                    animation-duration: calc(var(--animation-duration) * 3);
                    height: calc(var(--element-size) - 8px);
                    width: calc(var(--element-size) - 8px);
                }

                &::after {
                    animation-duration: calc(var(--animation-duration) * 1.5);
                    height: calc(var(--element-size) - 16px);
                    width: calc(var(--element-size) - 16px);
                }
            }
        }

        // Check if the spinner swoosh modifier should be declared
        @if $spinner-swoosh-modifier {
            // Set the keyframe
            @keyframes spinner-swoosh {
                100% {
                    transform: rotate(360deg);
                }
            }

            // Modifiers
            &.spinner--swoosh {
                animation-duration: var(--animation-duration);
                animation-iteration-count: infinite;
                animation-name: spinner-swoosh;
                animation-timing-function: linear;
                border: 0 solid var(--color);
                border-top-width: 2px;
                border-radius: 100%;
                display: inline-flex;
                height: var(--element-size);
                width: var(--element-size);

                // Modifiers: Colors
                @each $color-name, $color in $colors {
                    &.is-#{$color-name} {
                        --color: var(--color-#{$color-name});
                    }
                }
            }
        }

        // Check if the spinner target modifier should be declared
        @if $spinner-target-modifier {
            // Set the keyframe
            @keyframes spinner-target {
                100% {
                    transform: rotate(1440deg);
                }
            }

            // Modifiers
            &.spinner--target,
            &.spinner--target-x2,
            &.spinner--target-x3 {
                animation-direction: alternate;
                animation-duration: calc(var(--animation-duration) * 4);
                animation-iteration-count: infinite;
                animation-name: spinner-target;
                animation-timing-function: ease-in-out;
                border: 1px solid var(--color-alt);
                border-bottom-color: var(--color);
                border-radius: 100%;
                border-top-color: var(--color);
                display: inline-flex;
                height: var(--element-size);
                width: var(--element-size);

                // Modifiers: Colors
                @each $color-name, $color in $colors {
                    &.is-#{$color-name} {
                        --color: var(--color-#{$color-name});
                        --color-alt: var(--color-#{$color-name}-lighten-10);
                    }
                }
            }

            &.spinner--target {
                border-width: 2px;
            }

            &.spinner--target-x2 {
                // Pseudo elements
                &::before {
                    animation-duration: calc(calc(var(--animation-duration) * 4) * 3);
                    animation-iteration-count: infinite;
                    animation-name: spinner-target;
                    animation-timing-function: ease-in-out;
                    border: 1px solid var(--color-alt);
                    border-bottom-color: var(--color);
                    border-radius: 100%;
                    border-top-color: var(--color);
                    content: '';
                    height: calc(var(--element-size) - 8px);
                    position: absolute;
                    width: calc(var(--element-size) - 8px);
                }
            }

            &.spinner--target-x3 {
                // Pseudo elements
                &::before,
                &::after {
                    animation-iteration-count: infinite;
                    animation-name: spinner-target;
                    animation-timing-function: ease-in-out;
                    border: 1px solid var(--color-alt);
                    border-bottom-color: var(--color);
                    border-radius: 100%;
                    border-top-color: var(--color);
                    content: '';
                    position: absolute;
                }

                &::before {
                    animation-duration: calc(calc(var(--animation-duration) * 4) * 3);
                    height: calc(var(--element-size) - 8px);
                    width: calc(var(--element-size) - 8px);
                }

                &::after {
                    animation-duration: calc(calc(var(--animation-duration) * 4) * 1.5);
                    height: calc(var(--element-size) - 16px);
                    width: calc(var(--element-size) - 16px);
                }
            }
        }
    }
}
