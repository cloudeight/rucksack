@charset 'utf-8';

/*  ========================================================================
    JUICE -> ELEMENTS -> FORM -> LABEL
    ========================================================================  */

label {
    // Variables
    --element-spacing: var(--default-element-spacing) / 2;
    --font-color: inherit;
    --font-family: var(--primary-typeface);
    --font-size: var(--default-font-size);

    // Styles
    color: var(--font-color);
    cursor: pointer;
    display: block;
    font-family: var(--font-family);
    font-size: var(--font-size);
    margin: 0;
    margin-bottom: var(--element-spacing);
    padding: 0;
    user-select: none;

    // Check if the label size modifiers should be declared
    @if $label-size-modifiers {
        // Cycle through all of the sizes
        @each $size in $sizes {
            // Modifiers: Sizes
            &.is-#{$size} {
                // Variables
                --font-size: var(--default-font-size-#{$size});
            }

            // Check if the label size modifier breakpoints should be declared
            @if $label-size-modifier-breakpoints {
                // Cycle through all of the breakpoints
                @each $breakpoint-name, $breakpoint in $breakpoints {
                    // Breakpoint
                    @include breakpoint($breakpoint-name) {
                        // Modifiers: Size
                        &.is-#{$size}\@#{$breakpoint-name} {
                            // Variables
                            --font-size: var(--default-font-size-#{$size});
                        }
                    }
                }
            }
        }
    }

    // Check if the label feedback modifiers should be declared
    @if $label-feedback-modifiers {
        // Cycle through all of the feedback colors
        @each $feedback-name, $color in $feedback-colors {
            // Modifiers: Feedback colors
            &.has-#{$feedback-name} {
                // Variables
                --font-color: var(--feedback-color-#{$feedback-name});
            }
        }
    }

    // Modifiers: Props
    &[disabled] {
        @include disabled();
    }

    // Check if the label inline modifier should be declared
    @if $label-inline-modifier {
        // Modifiers
        &.label--inline {
            display: inline-block;
        }
    }
}
