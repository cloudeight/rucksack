@charset 'utf-8';

/*  ========================================================================
    JUICE -> ELEMENTS -> FORM -> SELECT
    ========================================================================  */

select {
    // Variables
    --accessibility-focus-width: var(--default-accessibility-focus-width);
    --accessibility-focus-color: var(--default-accessibility-focus-color);
    --background-color: var(--color-white);
    --border-color: var(--color-white-darken-3);
    --border-radius-bottom-left: var(--default-border-radius-bottom-left);
    --border-radius-bottom-right: var(--default-border-radius-bottom-right);
    --border-radius-top-left: var(--default-border-radius-top-left);
    --border-radius-top-right: var(--default-border-radius-top-right);
    --border-style: var(--default-border-style);
    --border-width-bottom: var(--default-border-width-bottom);
    --border-width-left: var(--default-border-width-left);
    --border-width-right: var(--default-border-width-right);
    --border-width-top: var(--default-border-width-top);
    --content-spacing: calc(var(--default-content-spacing) / 2);
    --element-spacing: var(--default-element-spacing);
    --font-color: var(--color-white-inverted-text);
    --font-family: var(--primary-typeface);
    --font-size: var(--default-font-size);
    --height: var(--default-element-height);

    // Styles
    appearance: none;
    background-color: var(--background-color);
    background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"/></svg>');
    background-position: calc(100% - var(--content-spacing)) 50%;
    background-repeat: no-repeat;
    background-size: var(--font-size);
    border: 0 var(--border-style) var(--border-color);
    border-bottom-left-radius: var(--border-radius-bottom-left);
    border-bottom-right-radius: var(--border-radius-bottom-right);
    border-top-left-radius: var(--border-radius-top-left);
    border-top-right-radius: var(--border-radius-top-right);
    border-bottom-width: var(--border-width-bottom);
    border-left-width: var(--border-width-left);
    border-right-width: var(--border-width-right);
    border-top-width: var(--border-width-top);
    color: var(--font-color);
    cursor: pointer;
    display: flex;
    font-family: var(--font-family);
    font-size: var(--font-size);
    height: var(--height);
    margin: 0;
    margin-bottom: var(--element-spacing);
    padding: 0 var(--height) 0 var(--content-spacing);
    outline: none;
    width: 100%;
    z-index: get-stack-index('default');

    // Pseudo classes
    &:hover {
        // Variables
        --background-color: var(--color-white-lighten-1);
        --border-color: var(--color-white-darken-6);
        --font-color: var(--color-white-inverted-text);

        // Styles
        z-index: get-stack-index('hover');
    }

    &:focus {
        // Variables
        --background-color: var(--color-white);
        --border-color: var(--feedback-color-info);
        --font-color: var(--color-white-inverted-text);

        // Styles
        box-shadow: 0 0 0 var(--accessibility-focus-width) var(--accessibility-focus-color);
        z-index: get-stack-index('focus');
    }

    &:active {
        // Variables
        --background-color: var(--color-white);
        --border-color: var(--feedback-color-info);
        --font-color: var(--color-white-inverted-text);

        // Styles
        box-shadow: 0 0 0 var(--accessibility-focus-width) var(--accessibility-focus-color);
        z-index: get-stack-index('active');
    }

    // Modifiers: Props
    &[disabled] {
        @include disabled();
    }

    // Check if the select size modifiers should be declared
    @if $select-size-modifiers {
        // Cycle through all of the sizes
        @each $size in $sizes {
            // Modifiers: Sizes
            &.is-#{$size} {
                // Variables
                --content-spacing: calc(var(--default-content-spacing-#{$size}) / 2);
                --font-size: var(--default-font-size-#{$size});
                --height: var(--default-element-height-#{$size});
            }

            // Check if the select size modifier breakpoints should be declared
            @if $select-size-modifier-breakpoints {
                // Cycle through all of the breakpoints
                @each $breakpoint-name, $breakpoint in $breakpoints {
                    // Breakpoint
                    @include breakpoint($breakpoint-name) {
                        // Modifiers: Size
                        &.is-#{$size}\@#{$breakpoint-name} {
                            // Variables
                            --content-spacing: calc(var(--default-content-spacing-#{$size}) / 2);
                            --font-size: var(--default-font-size-#{$size});
                            --height: var(--default-element-height-#{$size});
                        }
                    }
                }
            }
        }
    }

    // Check if the select feedback modifiers should be declared
    @if $select-feedback-modifiers {
        // Cycle through all of the feedback colors
        @each $feedback-name, $color in $feedback-colors {
            // Modifiers: Feedback colors
            &.has-#{$feedback-name} {
                // Variables
                --border-color: var(--feedback-color-#{$feedback-name});

                // Pseudo classes
                &:focus {
                    --accessibility-focus-color: var(--feedback-color-#{$feedback-name}-accessibility-focus);
                }

                &:active {
                    --accessibility-focus-color: var(--feedback-color-#{$feedback-name}-accessibility-focus);
                }

                // Modifiers: Props
                &[disabled] {
                    border-color: var(--feedback-color-#{$feedback-name}) !important;
                }
            }
        }
    }

    // Modifiers: Props
    &[multiple] {
        background-image: unset;
        height: initial;
        padding: 0;

        // Nested selectors
        option {
            padding: var(--content-spacing);
        }
    }

    // Check if the select pill modifier should be declared
    @if $select-pill-modifier {
        // Modifiers
        &.select--pill {
            border-radius: 999px;
        }
    }
}
