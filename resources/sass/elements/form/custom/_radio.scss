@charset 'utf-8';

/*  ========================================================================
    JUICE -> ELEMENTS -> FORM -> CUSTOM -> RADIO
    ========================================================================  */

// Check if the elements with custom radio should be imported
@if $import-elements and $import-element-custom-radio {
    .custom-radio {
        cursor: pointer;
        position: relative;

        // Pseudo classes
        &:hover {
            // Nested selectors
            div {
                // Pseudo elements
                &::before {
                    border-color: $custom-radio-border-color-hover;
                }
            }
        }

        // Nested selectors
        input[type=radio] {
            clip: rect(0, 0, 0, 0);
            height: 0;
            opacity: 0;
            padding: 0;
            position: absolute;
            margin: 0;
            width: 0;

            // Pseudo classes
            &:focus + div {
                // Pseudo elements
                &::before {
                    border-color: $custom-radio-checked-color;
                    box-shadow: 0 0 $custom-radio-accessibility-focus-width $custom-radio-accessibility-focus-color;
                }
            }

            &:checked + div {
                // Pseudo elements
                &::before {
                    background: $custom-radio-checked-color;
                    border-color: $custom-radio-checked-color;
                    box-shadow: inset 0 0 0 2px $custom-radio-background-color;
                }
            }

            &:checked:focus + div {
                // Pseudo elements
                &::before {
                    box-shadow: inset 0 0 0 2px $custom-radio-background-color,
                                0 0 $custom-radio-accessibility-focus-width $custom-radio-accessibility-focus-color;
                }
            }
        }

        div {
            display: flex;
            align-items: center;

            // Pseudo elements
            &::before {
                background: $custom-radio-background-color;
                border: 0 solid $custom-radio-border-color;
                border-bottom-width: $custom-radio-border-width-bottom;
                border-left-width: $custom-radio-border-width-left;
                border-radius: 100%;
                border-right-width: $custom-radio-border-width-right;
                border-top-width: $custom-radio-border-width-top;
                content: '';
                display: block;
                height: $custom-radio-height;
                margin: 0 $custom-radio-content-spacing;
                max-height: $custom-radio-height;
                min-height: $custom-radio-height;
                max-width: $custom-radio-height;
                min-width: $custom-radio-height;
                width: $custom-radio-height;
            }
        }

        // Check if the custom radio size modifiers should be declared
        @if $custom-radio-size-modifiers {
            // Cycle through all of the sizes
            @each $size in $sizes {
                // Modifiers: Sizes
                &.is-#{$size} {
                    // Nested selectors
                    div {
                        // Pseudo elements
                        &::before {
                            height: map-get($custom-radio-height-sizes, $size);
                            margin-right: map-get($custom-radio-content-spacing-sizes, $size);
                            max-height: map-get($custom-radio-height-sizes, $size);
                            min-height: map-get($custom-radio-height-sizes, $size);
                            max-width: map-get($custom-radio-height-sizes, $size);
                            min-width: map-get($custom-radio-height-sizes, $size);
                            width: map-get($custom-radio-height-sizes, $size);
                        }
                    }
                }

                // Check if the button size modifiers with breakpoints should be declared
                @if $button-size-modifiers-with-breakpoints {
                    // Cycle through all of the breakpoints
                    @each $breakpoint-name, $breakpoint-value in $breakpoints {
                        // Breakpoint
                        @include breakpoint($breakpoint-name) {
                            // Modifiers: Size
                            &.is-#{$size}\@#{$breakpoint-name} {
                                // Nested selectors
                                div {
                                    // Pseudo elements
                                    &::before {
                                        height: map-get($custom-radio-height-sizes, $size);
                                        margin-right: map-get($custom-radio-content-spacing-sizes, $size);
                                        max-height: map-get($custom-radio-height-sizes, $size);
                                        min-height: map-get($custom-radio-height-sizes, $size);
                                        max-width: map-get($custom-radio-height-sizes, $size);
                                        min-width: map-get($custom-radio-height-sizes, $size);
                                        width: map-get($custom-radio-height-sizes, $size);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
