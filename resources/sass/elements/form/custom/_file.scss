@charset 'utf-8';

/*  ========================================================================
    JUICE -> ELEMENTS -> FORM -> CUSTOM -> FILE
    ========================================================================  */

.custom-file {
    // Variables
    --accessibility-focus-width: var(--default-accessibility-focus-width);
    --accessibility-focus-color: var(--default-accessibility-focus-color);
    --background-color: var(--color-white);
    --border-color: var(--color-white-darken-3);
    --border-radius-bottom-left: var(--default-border-radius-bottom-left);
    --border-radius-bottom-right: var(--default-border-radius-bottom-right);
    --border-radius-top-left: var(--default-border-radius-top-left);
    --border-radius-top-right: var(--default-border-radius-top-right);
    --border-style: var(--default-border-style);
    --border-width-bottom: var(--default-border-width-bottom);
    --border-width-divider: var(--default-border-width-divider);
    --border-width-left: var(--default-border-width-left);
    --border-width-right: var(--default-border-width-right);
    --border-width-top: var(--default-border-width-top);
    --content-spacing: calc(var(--default-content-spacing) / 2);
    --element-spacing: var(--default-element-spacing);
    --font-color: var(--color-white-inverted-text);
    --font-family: var(--primary-typeface);
    --font-size: var(--default-font-size);
    --height: var(--default-element-height);

    // Styles
    align-items: center;
    display: flex;
    height: var(--height);
    margin-bottom: var(--element-spacing);

    // Check if the custom file size modifiers should be declared
    @if $custom-file-size-modifiers {
        // Cycle through all of the sizes
        @each $size in $sizes {
            // Modifiers: Sizes
            &.is-#{$size} {
                // Variables
                --content-spacing: calc(var(--default-content-spacing-#{$size}) / 2);
                --height: var(--default-element-height-#{$size});
            }

            // Check if the custom file size modifier breakpoints should be declared
            @if $custom-file-size-modifier-breakpoints {
                // Cycle through all of the breakpoints
                @each $breakpoint-name, $breakpoint in $breakpoints {
                    // Breakpoint
                    @include breakpoint($breakpoint-name) {
                        // Modifiers: Size
                        &.is-#{$size}\@#{$breakpoint-name} {
                            // Variables
                            --content-spacing: calc(var(--default-content-spacing-#{$size}) / 2);
                            --height: var(--default-element-height-#{$size});
                        }
                    }
                }
            }
        }
    }

    // Check if the custom file feedback modifiers should be declared
    @if $custom-file-feedback-modifiers {
        // Cycle through all of the feedback colors
        @each $feedback-name, $color in $feedback-colors {
            // Modifiers: Feedback colors
            &.has-#{$feedback-name} {
                // Nested selectors
                .custom-file__button {
                    // Variables
                    --accessibility-focus-color: var(--feedback-color-#{$feedback-name}-accessibility-focus);
                    --background-color: var(--feedback-color-#{$feedback-name});
                    --border-color: var(--feedback-color-#{$feedback-name}-darken-3);
                    --font-color: var(--feedback-color-#{$feedback-name}-inverted-text);
                }

                .custom-file__text {
                    // Variables
                    --border-color: var(--feedback-color-#{$feedback-name});
                }
            }
        }
    }

    // Nested selectors
    input[type=file] {
        clip: rect(0, 0, 0, 0);
        height: 0;
        opacity: 0;
        padding: 0;
        position: absolute;
        margin: 0;
        width: 0;

        // Pseudo classes
        &:focus + div {
            box-shadow: 0 0 0 var(--accessibility-focus-width) var(--accessibility-focus-color);
        }
    }

    .custom-file__button,
    .custom-file__text {
        border-left-width: 0;
        border-right-width: 0;
        height: 100%;

        // Pseudo classes
        &:first-of-type {
            border-left-width: var(--border-width-left);
            border-bottom-left-radius: var(--border-radius-bottom-left);
            border-top-left-radius: var(--border-radius-top-left);

            // Pseudo classes
            &:not(.custom-file__text) {
                border-right-width:  var(--border-width-divider);
            }
        }

        &:last-of-type {
            border-bottom-right-radius: var(--border-radius-bottom-right);
            border-right-width: var(--border-width-right);
            border-top-right-radius: var(--border-radius-top-right);

            // Pseudo classes
            &:not(.custom-file__text) {
                border-left-width:  var(--border-width-divider);
            }
        }
    }

    .custom-file__button {
        @extend #{$button};
        border-radius: 0;
        margin: 0;
    }

    .custom-file__text {
        @include truncate-text;
        align-items: center;
        background-color: var(--background-color);
        border: 0 var(--border-style) var(--border-color);
        border-bottom-width: var(--border-width-bottom);
        border-top-width: var(--border-width-top);
        color: var(--font-color);
        display: flex;
        flex-grow: 1;
        font-family: var(--font-family);
        font-size: var(--font-size);
        padding: 0 var(--content-spacing);
    }
}
