@charset 'utf-8';

// Check if the elements with custom file should be imported
@if $import-elements and $import-element-custom-file {
    .custom-file {
        border-bottom-left-radius: $custom-file-border-radius-bottom-left;
        border-bottom-right-radius: $custom-file-border-radius-bottom-right;
        border-top-left-radius: $custom-file-border-radius-top-left;
        border-top-right-radius: $custom-file-border-radius-top-right;
        height: element-height(map($custom-file-element-height-multipliers, 'medium'));
        margin-bottom: element-spacing();
        max-width: map($custom-file-max-widths, 'medium');
        min-width: map($custom-file-min-widths, 'medium');
        width: 100%;

        // Pseudo classes
        &:hover {
            // Nested selectors
            .custom-file__elements {
                // Nested selectors
                .custom-file__icon,
                .custom-file__text {
                    background-color: $custom-file-background-color-hover;
                    border-color: $custom-file-border-color-hover;
                    color: $custom-file-font-color-hover;
                }
            }
        }

        &:focus {
            box-shadow: 0 0 0 $custom-file-accessibility-focus-width $custom-file-accessibility-focus-color;

            // Nested selectors
            .custom-file__elements {
                // Nested selectors
                .custom-file__icon,
                .custom-file__text {
                    background-color: $custom-file-background-color-focus;
                    border-color: $custom-file-border-color-focus;
                    color: $custom-file-font-color-focus;
                }
            }
        }

        &:active {
            box-shadow: 0 0 0 $custom-file-accessibility-focus-width $custom-file-accessibility-focus-color;

            // Nested selectors
            .custom-file__elements {
                // Nested selectors
                .custom-file__icon,
                .custom-file__text {
                    background-color: $custom-file-background-color-active;
                    border-color: $custom-file-border-color-active;
                    color: $custom-file-font-color-active;
                }
            }
        }

        // Check if the custom file size modifiers should be declared
        @if $custom-file-size-modifiers {
            // Cycle through all of the sizes
            @each $size in $sizes {
                // Modifiers: Sizes
                &.is-#{$size} {
                    height: element-height(map($custom-file-element-height-multipliers, $size));
                    max-width: map($custom-file-max-widths, $size);
                    min-width: map($custom-file-min-widths, $size);

                    .custom-file__elements {
                        font-size: map($custom-file-font-sizes, $size);

                        .custom-file__text {
                            padding: content-spacing(map($custom-file-content-spacing-multipliers, $size));
                        }
                    }
                }

                // Check if the custom file size modifiers with breakpoints should be declared
                @if $custom-file-size-modifiers-with-breakpoints {
                    // Cycle through all of the breakpoints
                    @each $breakpoint-name, $breakpoint-value in $breakpoints {
                        // Breakpoints
                        @include breakpoint($breakpoint-name) {
                            // Modifiers: Sizes
                            &.is-#{$size}\@#{$breakpoint-name} {
                                height: element-height(map($custom-file-element-height-multipliers, $size));
                                max-width: map($custom-file-max-widths, $size);
                                min-width: map($custom-file-min-widths, $size);

                                .custom-file__elements {
                                    font-size: map($custom-file-font-sizes, $size);

                                    .custom-file__text {
                                        padding: content-spacing(map($custom-file-content-spacing-multipliers, $size));
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        // Check if the custom file feedback modifiers should be declared
        @if $custom-file-feedback-modifiers {
            // Cycle through all of the feedback colors
            @each $feedback-name, $feedback-value in $feedback-colors {
                // Modifiers: Feedback colors
                &.has-#{$feedback-name} {
                    // Pseudo classes
                    &:hover,
                    &:focus,
                    &:active {
                        // Nested selectors
                        .custom-file__elements {
                            // Nested selectors
                            .custom-file__icon,
                            .custom-file__text {
                                border-color: feedback-color($feedback-name);
                            }
                        }
                    }

                    &:focus,
                    &:active {
                        box-shadow: 0 0 0 $custom-file-accessibility-focus-width feedback-color('#{$feedback-name}-accessibility-focus');
                    }

                    // Nested selectors
                    input[type=file] {
                        // Pseudo classes
                        &:focus + .custom-file__elements,
                        &:active + .custom-file__elements {
                            box-shadow: 0 0 0 $custom-file-accessibility-focus-width feedback-color('#{$feedback-name}-accessibility-focus');

                            // Nested selectors
                            .custom-file__icon,
                            .custom-file__text {
                                border-color: feedback-color($feedback-name);
                            }
                        }
                    }

                    .custom-file__elements {
                        // Nested selectors
                        .custom-file__icon,
                        .custom-file__text {
                            border-color: feedback-color($feedback-name);
                        }
                    }
                }
            }
        }

        // Nested selectors
        input[type=file] {
            clip: rect(0, 0, 0, 0);
            height: 0;
            margin: 0;
            opacity: 0;
            padding: 0;
            position: absolute;
            width: 0;

            // Pseudo classes
            &:focus + .custom-file__elements {
                box-shadow: 0 0 0 $custom-file-accessibility-focus-width $custom-file-accessibility-focus-color;

                // Nested selectors
                .custom-file__icon,
                .custom-file__text {
                    background-color: $custom-file-background-color-focus;
                    border-color: $custom-file-border-color-focus;
                    color: $custom-file-font-color-focus;
                }
            }

            &:active + .custom-file__elements {
                box-shadow: 0 0 0 $custom-file-accessibility-focus-width $custom-file-accessibility-focus-color;

                // Nested selectors
                .custom-file__icon,
                .custom-file__text {
                    background-color: $custom-file-background-color-active;
                    border-color: $custom-file-border-color-active;
                    color: $custom-file-font-color-active;
                }
            }
        }

        .custom-file__elements {
            border-bottom-left-radius: $custom-file-border-radius-bottom-left;
            border-bottom-right-radius: $custom-file-border-radius-bottom-right;
            border-top-left-radius: $custom-file-border-radius-top-left;
            border-top-right-radius: $custom-file-border-radius-top-right;
            display: flex;
            flex-direction: column;
            font-family: $custom-file-font-family;
            font-size: map($custom-file-font-sizes, 'medium');
            height: 100%;
            line-height: normal;

            // Nested selectors
            .custom-file__icon,
            .custom-file__text {
                border: 0 $custom-file-border-style $custom-file-border-color;
                border-left-width: $custom-file-border-width-left;
                border-right-width: $custom-file-border-width-right;
                color: $custom-file-font-color;

                // Pseudo classes
                &:first-child {
                    border-bottom-width: $custom-file-border-width-divider;
                    border-top-left-radius: $custom-file-border-radius-top-left;
                    border-top-right-radius: $custom-file-border-radius-top-right;
                    border-top-width: $custom-file-border-width-top;
                }

                &:last-child {
                    border-bottom-left-radius: $custom-file-border-radius-bottom-left;
                    border-bottom-right-radius: $custom-file-border-radius-bottom-right;
                    border-bottom-width: $custom-file-border-width-bottom;
                }
            }

            .custom-file__icon {
                align-items: center;
                display: flex;
                flex-grow: 1;
                justify-content: center;
            }

            .custom-file__text {
                @include truncate-text;
                padding: content-spacing(map($custom-file-content-spacing-multipliers, 'medium'));
                text-align: center;
            }
        }
    }
}
