@charset 'utf-8';

/*  ========================================================================
    JUICE -> ELEMENTS -> FORM -> TEXTAREA
    ========================================================================  */

// Check if the elements with textarea should be imported
@if $import-elements and $import-element-textarea {
    textarea {
        // Variables
        --accessibility-focus-width: var(--default-accessibility-focus-width);
        --accessibility-focus-color: var(--default-accessibility-focus-color);
        --background-color: var(--color-white);
        --border-color: var(--color-white-darken-3);
        --border-radius-bottom-left: var(--default-border-radius-bottom-left);
        --border-radius-bottom-right: var(--default-border-radius-bottom-right);
        --border-radius-top-left: var(--default-border-radius-top-left);
        --border-radius-top-right: var(--default-border-radius-top-right);
        --border-style: var(--default-border-style);
        --border-width-bottom: var(--default-border-width-bottom);
        --border-width-left: var(--default-border-width-left);
        --border-width-right: var(--default-border-width-right);
        --border-width-top: var(--default-border-width-top);
        --content-spacing: calc(var(--default-content-spacing) / 2);
        --element-spacing: var(--default-element-spacing);
        --font-color: var(--color-white-inverted-text);
        --font-family: var(--primary-typeface);
        --font-size: var(--default-font-size);
        --height: var(--default-element-height);

        // Styles
        appearance: none;
        background-color: var(--background-color);
        border: 0 var(--border-style) var(--border-color);
        border-bottom-left-radius: var(--border-radius-bottom-left);
        border-bottom-right-radius: var(--border-radius-bottom-right);
        border-top-left-radius: var(--border-radius-top-left);
        border-top-right-radius: var(--border-radius-top-right);
        border-bottom-width: var(--border-width-bottom);
        border-left-width: var(--border-width-left);
        border-right-width: var(--border-width-right);
        border-top-width: var(--border-width-top);
        color: var(--font-color);
        display: flex;
        font-family: var(--font-family);
        font-size: var(--font-size);
        line-height: 1.5;
        margin: 0;
        margin-bottom: var(--element-spacing);
        min-width: 100%;
        outline: none;
        padding: var(--content-spacing);
        resize: none;
        width: 100%;
        z-index: get-stack-index('default');

        // Pseudo classes
        &:hover {
            // Variables
            --background-color: var(--color-white-lighten-1);
            --border-color: var(--color-white-darken-6);
            --font-color: var(--color-white-inverted-text);

            // Styles
            z-index: get-stack-index('hover');
        }

        &:focus {
            // Variables
            --background-color: var(--color-white);
            --border-color: var(--feedback-color-info);
            --font-color: var(--color-white-inverted-text);

            // Styles
            box-shadow: 0 0 0 var(--accessibility-focus-width) var(--accessibility-focus-color);
            z-index: get-stack-index('focus');
        }

        &:active {
            // Variables
            --background-color: var(--color-white);
            --border-color: var(--feedback-color-info);
            --font-color: var(--color-white-inverted-text);

            // Styles
            box-shadow: 0 0 0 var(--accessibility-focus-width) var(--accessibility-focus-color);
            z-index: get-stack-index('active');
        }

        // Pseudo elements
        &::placeholder {
            // Variables
            --font-color: var(--color-white-darken-6);

            // Styles
            color: var(--font-color);
        }

        // Check if the textarea size modifiers should be declared
        @if $textarea-size-modifiers {
            // Cycle through all of the sizes
            @each $size in $sizes {
                // Modifiers: Sizes
                &.is-#{$size} {
                    // Variables
                    --content-spacing: calc(var(--default-content-spacing-#{$size}) / 2);
                    --font-size: var(--default-font-size-#{$size});
                }

                // Check if the textarea size modifier breakpoints should be declared
                @if $textarea-size-modifier-breakpoints {
                    // Cycle through all of the breakpoints
                    @each $breakpoint-name, $breakpoint in $breakpoints {
                        // Breakpoint
                        @include breakpoint($breakpoint-name) {
                            // Modifiers: Size
                            &.is-#{$size}\@#{$breakpoint-name} {
                                // Variables
                                --content-spacing: calc(var(--default-content-spacing-#{$size}) / 2);
                                --font-size: var(--default-font-size-#{$size});
                            }
                        }
                    }
                }
            }
        }

        // Check if the textarea feedback modifiers should be declared
        @if $textarea-feedback-modifiers {
            // Cycle through all of the feedback colors
            @each $feedback-name, $color in $feedback-colors {
                // Modifiers: Feedback colors
                &.has-#{$feedback-name} {
                    // Variables
                    --border-color: var(--feedback-color-#{$feedback-name});

                    // Pseudo classes
                    &:focus {
                        --accessibility-focus-color: var(--feedback-color-#{$feedback-name}-accessibility-focus);
                    }

                    &:active {
                        --accessibility-focus-color: var(--feedback-color-#{$feedback-name}-accessibility-focus);
                    }

                    // Modifiers: Props
                    &[disabled] {
                        border-color: var(--feedback-color-#{$feedback-name}) !important;
                    }
                }
            }
        }

        // Modifiers: Props
        &[disabled] {
            @include disabled();
        }

        // Check if the textarea resize modifier should be declared
        @if $textarea-resize-modifier {
            // Modifiers
            &.textarea--resize {
                resize: vertical;
            }
        }

        // Check if the textarea scrollbar modifier should be declared
        @if $textarea-scrollbar-modifier {
            // Modifiers
            &.textarea--scrollbar {
                border-bottom-right-radius: 0;
                border-top-right-radius: 0;
                overflow-y: scroll;
            }
        }
    }
}
