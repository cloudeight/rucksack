@charset 'utf-8';

/*  ========================================================================
    JUICE -> ELEMENTS -> LAYOUT -> MEDIA OBJECT
    ========================================================================  */

.media-object {
    // Variables
    --badge-image-width: 75px;
    --badge-image-width-small: 50px;
    --badge-image-width-large: 100px;
    --badge-image-width-huge: 125px;
    --content-spacing: var(--default-content-spacing);
    --element-spacing: var(--default-element-spacing);
    --font-size: var(--default-font-size);

    // Styles
    display: flex;
    font-size: var(--font-size);
    margin: 0;
    margin-bottom: var(--element-spacing);
    position: relative;

    // Check if the media object size modifiers should be declared
    @if $media-object-size-modifiers {
        // Cycle through all of the sizes
        @each $size in $sizes {
            // Modifiers: Sizes
            &.is-#{$size} {
                // Variables
                --badge-image-width: var(--badge-image-width-#{$size});
                --content-spacing: var(--default-content-spacing-#{$size});
                --font-size: var(--default-font-size-#{$size});
            }

            // Check if the media object size modifier breakpoints should be declared
            @if $media-object-size-modifier-breakpoints {
                // Cycle through all of the breakpoints
                @each $breakpoint-name, $breakpoint in $breakpoints {
                    // Breakpoint
                    @include breakpoint($breakpoint-name) {
                        // Modifiers: Size
                        &.is-#{$size}\@#{$breakpoint-name} {
                            // Variables
                            --badge-image-width: var(--badge-image-width-#{$size});
                            --content-spacing: var(--default-content-spacing-#{$size});
                            --font-size: var(--default-font-size-#{$size});
                        }
                    }
                }
            }
        }
    }

    // Check if the media object reverse modifier should be declared
    @if $media-object-reverse-modifiers {
        // Modifiers
        &.media-object--reverse {
            flex-direction: row-reverse;

            // Nested selectors
            .media-object__badge {
                margin: 0;
                margin-left: var(--element-spacing);
            }
        }
    }

    // Check if the media object seamless modifier should be declared
    @if $media-object-seamless-modifiers {
        // Modifiers
        &.media-object--seamless {
            // Nested selectors
            .media-object__badge {
                margin-right: 0;
            }
        }
    }

    // Nested selectors
    .media-object__badge {
        margin: 0;
        margin-right: var(--content-spacing);
        flex: 0 0 auto;

        // Nested selectors
        img {
            display: block;
            max-width: var(--badge-image-width);
            min-width: var(--badge-image-width);
            width: var(--badge-image-width);
        }
    }

    .media-object__content {
        flex-grow: 1;
    }
}
