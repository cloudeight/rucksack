@charset 'utf-8';

/*  ========================================================================
    JUICE -> ELEMENTS -> NAVIGATION -> BREADCRUMB
    ========================================================================  */

// Check if the elements with breadcrumb should be imported
@if $import-elements and $import-element-breadcrumb {
    .breadcrumb {
        // Variables
        --content-spacing: calc(var(--default-content-spacing) / 2);
        --element-spacing: var(--default-element-spacing);
        --font-color: inherit;
        --font-size: var(--default-font-size);
        --separator: '\203A';

        // Styles
        color: var(--font-color);
        display: flex;
        flex-wrap: wrap;
        font-size: var(--font-size);
        list-style: none;
        padding: 0;
        margin: 0;
        margin-bottom: var(--element-spacing);

        // Check if the breadcrumb alignment modifiers should be declared
        @if $breadcrumb-alignment-modifiers {
            // Modifiers
            &.breadcrumb--center {
                // Styles
                justify-content: center;
            }

            &.breadcrumb--right {
                // Styles
                justify-content: flex-end;
            }
        }

        // Check if the breadcrumb angle separator modifier should be declared
        @if $breadcrumb-angle-separator-modifier {
            // Modifiers
            &.breadcrumb--angle {
                // Variables
                --separator: '\203A';

                // Nested selectors
                li {
                    // Pseudo elements
                    &::before {
                        // Styles (IE fallback for postcss-css-variables)
                        content: var(--separator);
                    }
                }
            }
        }

        // Check if the breadcrumb arrow separator modifier should be declared
        @if $breadcrumb-arrow-separator-modifier {
            // Modifiers
            &.breadcrumb--arrow {
                // Variables
                --separator: '\02192';

                // Nested selectors
                li {
                    // Pseudo elements
                    &::before {
                        // Styles (IE fallback for postcss-css-variables)
                        content: var(--separator);
                    }
                }
            }
        }

        // Check if the breadcrumb bullet separator modifier should be declared
        @if $breadcrumb-bullet-separator-modifier {
            // Modifiers
            &.breadcrumb--bullet {
                // Variables
                --separator: '\02022';

                // Nested selectors
                li {
                    // Pseudo elements
                    &::before {
                        // Styles (IE fallback for postcss-css-variables)
                        content: var(--separator);
                    }
                }
            }
        }

        // Check if the breadcrumb slash separator modifier should be declared
        @if $breadcrumb-slash-separator-modifier {
            // Modifiers
            &.breadcrumb--slash {
                // Variables
                --separator: '\0002f';

                // Nested selectors
                li {
                    // Pseudo elements
                    &::before {
                        // Styles (IE fallback for postcss-css-variables)
                        content: var(--separator);
                    }
                }
            }
        }

        // Nested selectors
        li {
            // Styles
            display: inline-flex;
            position: relative;

            // Pseudo classes
            &:first-child {
                // Pseudo elements
                &::before {
                    // Styles
                    content: '';
                    font-size: var(--font-size);
                    padding: 0;
                }
            }

            // Pseudo elements
            &::before {
                // Styles
                content: var(--separator);
                padding: 0 var(--content-spacing);
                opacity: 0.5;
            }

            // Nested selectors
            a {
                // Variables
                --font-color: var(--default-link-color);

                // Styles
                color: var(--font-color);

                // Pseudo classes
                &:hover {
                    // Variables
                    --font-color: var(--default-link-color-hover);

                    // Styles (IE fallback for postcss-css-variables)
                    color: var(--font-color);
                }

                &:focus {
                    // Variables
                    --font-color: var(--default-link-color-focus);

                    // Styles (IE fallback for postcss-css-variables)
                    color: var(--font-color);
                }

                &:active {
                    // Variables
                    --font-color: var(--default-link-color-active);

                    // Styles (IE fallback for postcss-css-variables)
                    color: var(--font-color);
                }
            }

            .breadcrumb__icon {
                // Styles
                align-items: center;
                display: inline-flex;
                justify-content: center;
                margin-right: calc(var(--content-spacing) / 2);
            }
        }
    }
}
