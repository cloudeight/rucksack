@charset 'utf-8';

/*  ========================================================================
    JUICE -> ELEMENTS -> NAVIGATION -> PAGINATION
    ========================================================================  */

// Check if the elements with pagination should be imported
@if $import-elements and $import-element-pagination {
    .pagination {
        // Variables
        --accessibility-focus-width: var(--default-accessibility-focus-width);
        --accessibility-focus-color: var(--color-primary-accessibility-focus);
        --background-color: var(--color-white);
        --border-color: var(--color-white-darken-3);
        --border-radius-bottom-left: var(--default-border-radius-bottom-left);
        --border-radius-bottom-right: var(--default-border-radius-bottom-right);
        --border-radius-top-left: var(--default-border-radius-top-left);
        --border-radius-top-right: var(--default-border-radius-top-right);
        --border-style: var(--default-border-style);
        --border-width-bottom: var(--default-border-width-bottom);
        --border-width-divider: var(--default-border-width-divider);
        --border-width-left: var(--default-border-width-left);
        --border-width-right: var(--default-border-width-right);
        --border-width-top: var(--default-border-width-top);
        --box-shadow: var(--default-box-shadow);
        --content-spacing: calc(var(--default-content-spacing) / 2);
        --height: var(--default-element-height);
        --element-spacing: var(--default-element-spacing);
        --font-color: var(--color-white-inverted-text);
        --font-size: var(--default-font-size);

        // Styles
        display: flex;
        font-size: var(--font-size);
        justify-content: center;
        margin-bottom: var(--element-spacing);

        // Check if the pagination size modifiers should be declared
        @if $pagination-size-modifiers {
            // Cycle through all of the sizes
            @each $size in $sizes {
                // Modifiers: Sizes
                &.is-#{$size} {
                    // Variables
                    --font-size: var(--default-font-size-#{$size});
                    --height: var(--default-element-height-#{$size});
                    --content-spacing: calc(var(--default-content-spacing-#{$size}) / 2);

                    // Styles (IE fallback for postcss-css-variables)
                    font-size: var(--font-size);

                    // Nested selectors
                    ul {
                        // Nested selectors
                        li {
                            // Styles (IE fallback for postcss-css-variables)
                            min-width: var(--height);

                            // Nested selectors
                            a,
                            span {
                                // Styles (IE fallback for postcss-css-variables)
                                height: var(--height);
                                padding: 0 var(--content-spacing);
                            }
                        }
                    }
                }

                // Check if the pagination size modifier breakpoints should be declared
                @if $pagination-size-modifier-breakpoints {
                    // Cycle through all of the breakpoints
                    @each $breakpoint-name, $breakpoint in $breakpoints {
                        // Breakpoint
                        @include breakpoint($breakpoint-name) {
                            // Modifiers: Size
                            &.is-#{$size}\@#{$breakpoint-name} {
                                // Variables
                                --font-size: var(--default-font-size-#{$size});
                                --height: var(--default-element-height-#{$size});
                                --content-spacing: calc(var(--default-content-spacing-#{$size}) / 2);

                                // Styles (IE fallback for postcss-css-variables)
                                font-size: var(--font-size);

                                // Nested selectors
                                ul {
                                    // Nested selectors
                                    li {
                                        // Styles (IE fallback for postcss-css-variables)
                                        min-width: var(--height);

                                        // Nested selectors
                                        a,
                                        span {
                                            // Styles (IE fallback for postcss-css-variables)
                                            height: var(--height);
                                            padding: 0 var(--content-spacing);
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        // Check if the pagination alignment modifiers should be declared
        @if $pagination-alignment-modifiers {
            // Modifiers
            &.pagination--left {
                // Styles
                justify-content: flex-start;
            }

            &.pagination--right {
                // Styles
                justify-content: flex-end;
            }
        }

        // Nested selectors
        ul {
            // Styles
            box-shadow: var(--box-shadow);
            display: flex;
            list-style: none;
            padding: 0;
            margin: 0;

            // Nested selectors
            li {
                // Styles
                margin-right: calc(0px - var(--border-width-divider));
                min-width: var(--height);

                // Pseudo classes
                &:first-child {
                    // Nested selectors
                    a,
                    span {
                        // Styles
                        border-bottom-left-radius: var(--border-radius-bottom-left);
                        border-left-width: var(--border-width-left);
                        border-top-left-radius: var(--border-radius-top-left);
                    }
                }

                &:last-child {
                    // Nested selectors
                    a,
                    span {
                        // Styles
                        border-bottom-right-radius: var(--border-radius-bottom-right);
                        border-right-width: var(--border-width-right);
                        border-top-right-radius: var(--border-radius-top-right);
                    }
                }

                // Nested selectors
                a,
                span {
                    // Styles
                    align-items: center;
                    background-color: var(--background-color);
                    border: 0 var(--border-style) var(--border-color);
                    border-bottom-width: var(--border-width-bottom);
                    border-left-width: var(--border-width-divider);
                    border-right-width: var(--border-width-divider);
                    border-top-width: var(--border-width-top);
                    color: var(--font-color);
                    display: flex;
                    height: var(--height);
                    justify-content: center;
                    padding: 0 var(--content-spacing);
                    user-select: none;
                    width: 100%;
                }

                a {
                    // Variables
                    --font-color: var(--color-white-inverted-text);

                    // Styles
                    color: var(--font-color);
                    position: relative;
                    text-decoration: none;
                    z-index: get-stack-index('default');

                    // Pseudo classes
                    &:hover {
                        // Variables
                        --background-color: var(--color-primary-lighten-1);
                        --border-color: var(--color-primary-darken-6);
                        --font-color: var(--color-primary-inverted-text);

                        // Styles
                        z-index: get-stack-index('hover');

                        // Styles (IE fallback for postcss-css-variables)
                        background-color: var(--background-color);
                        border-color: var(--border-color);
                        color: var(--font-color);
                    }

                    &:focus {
                        // Variables
                        --background-color: var(--color-primary);
                        --border-color: var(--color-primary-darken-6);
                        --font-color: var(--color-primary-inverted-text);

                        // Styles
                        box-shadow: 0 0 0 var(--accessibility-focus-width) var(--accessibility-focus-color);
                        z-index: get-stack-index('focus');

                        // Styles (IE fallback for postcss-css-variables)
                        background-color: var(--background-color);
                        border-color: var(--border-color);
                        color: var(--font-color);
                    }

                    &:active {
                        // Variables
                        --background-color: var(--color-primary-darken-1);
                        --border-color: var(--color-primary-darken-8);
                        --font-color: var(--color-primary-inverted-text);

                        // Styles
                        z-index: get-stack-index('active');

                        // Styles (IE fallback for postcss-css-variables)
                        background-color: var(--background-color);
                        border-color: var(--border-color);
                        color: var(--font-color);
                    }

                    // Modifiers: State hooks
                    &.is-active {
                        // Styles
                        font-size: calc(var(--font-size) + 0.1em);
                        font-weight: bold;
                    }

                    &.is-disabled {
                        // Styles
                        @include disabled();
                        background-color: var(--background-color) !important;
                        border-color: var(--border-color) !important;
                        color: var(--link-color) !important;

                        // Pseudo classes
                        &:hover,
                        &:focus,
                        &:active {
                            // Styles
                            background-color: var(--background-color) !important;
                            border-color: var(--border-color) !important;
                            color: var(--link-color) !important;
                        }
                    }
                }

                span {
                    // Styles
                    cursor: default;
                }
            }
        }
    }
}
